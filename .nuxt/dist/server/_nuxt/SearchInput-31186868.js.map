{"version":3,"file":"SearchInput-31186868.js","sources":["../../../../node_modules/nuxt/dist/app/components/client-only.js","../../../../components/Base/SearchInput.vue"],"sourcesContent":["import { createElementBlock, createElementVNode, createStaticVNode, defineComponent, getCurrentInstance, h, onMounted, ref } from \"vue\";\nimport { getFragmentHTML } from \"./utils.js\";\nexport default defineComponent({\n  name: \"ClientOnly\",\n  inheritAttrs: false,\n  // eslint-disable-next-line vue/require-prop-types\n  props: [\"fallback\", \"placeholder\", \"placeholderTag\", \"fallbackTag\"],\n  setup(_, { slots, attrs }) {\n    const mounted = ref(false);\n    onMounted(() => {\n      mounted.value = true;\n    });\n    return (props) => {\n      if (mounted.value) {\n        return slots.default?.();\n      }\n      const slot = slots.fallback || slots.placeholder;\n      if (slot) {\n        return slot();\n      }\n      const fallbackStr = props.fallback || props.placeholder || \"\";\n      const fallbackTag = props.fallbackTag || props.placeholderTag || \"span\";\n      return createElementBlock(fallbackTag, attrs, fallbackStr);\n    };\n  }\n});\nconst cache = /* @__PURE__ */ new WeakMap();\n/*! @__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nexport function createClientOnly(component) {\n  if (cache.has(component)) {\n    return cache.get(component);\n  }\n  const clone = { ...component };\n  if (clone.render) {\n    clone.render = (ctx, ...args) => {\n      if (ctx.mounted$) {\n        const res = component.render?.bind(ctx)(ctx, ...args);\n        return res.children === null || typeof res.children === \"string\" ? createElementVNode(res.type, res.props, res.children, res.patchFlag, res.dynamicProps, res.shapeFlag) : h(res);\n      } else {\n        const fragment = getFragmentHTML(ctx._.vnode.el ?? null);\n        return process.client ? createStaticVNode(fragment.join(\"\"), fragment.length) : h(\"div\", ctx.$attrs ?? ctx._.attrs);\n      }\n    };\n  } else if (clone.template) {\n    clone.template = `\n      <template v-if=\"mounted$\">${component.template}</template>\n      <template v-else><div></div></template>\n    `;\n  }\n  clone.setup = (props, ctx) => {\n    const instance = getCurrentInstance();\n    const attrs = instance.attrs;\n    const directives = extractDirectives(instance);\n    instance.attrs = {};\n    const mounted$ = ref(false);\n    onMounted(() => {\n      instance.attrs = attrs;\n      instance.vnode.dirs = directives;\n      mounted$.value = true;\n    });\n    return Promise.resolve(component.setup?.(props, ctx) || {}).then((setupState) => {\n      return typeof setupState !== \"function\" ? { ...setupState, mounted$ } : (...args) => {\n        if (mounted$.value) {\n          const res = setupState(...args);\n          return res.children === null || typeof res.children === \"string\" ? createElementVNode(res.type, res.props, res.children, res.patchFlag, res.dynamicProps, res.shapeFlag) : h(res);\n        } else {\n          const fragment = getFragmentHTML(instance?.vnode.el ?? null);\n          return process.client ? createStaticVNode(fragment.join(\"\"), fragment.length) : h(\"div\", ctx.attrs);\n        }\n      };\n    });\n  };\n  cache.set(component, clone);\n  return clone;\n}\nfunction extractDirectives(instance) {\n  if (!instance || !instance.vnode.dirs) {\n    return null;\n  }\n  const directives = instance.vnode.dirs;\n  instance.vnode.dirs = null;\n  return directives;\n}\n","<script setup>\nconst { locale } = useI18n();\n\nconst props = defineProps({\n    modelValue: {\n        required: true,\n    },\n    isList: {\n        required: false,\n        default: false,\n        type: Boolean,\n    },\n    placeholder: {\n        required: true,\n        type: String,\n    },\n})\n\nconst inputModelValue = ref(null)\ninputModelValue.value = props.modelValue\nconst emit = defineEmits(['update:modelValue'])\n\nconst updateValue = (event) => {\n    emit('update:modelValue', inputModelValue.value);\n}\n\nconst searched = ref(true);\nconst isFocused = ref(false);\n\nconst results = ref(null);\nconst specialties = ref([]);\nconst doctors = ref([]);\nwatch(inputModelValue, async (newVal) => {\n    searched.value = false;\n    if (!props.isList) return;\n\n    isFocused.value = true;\n    const { data } = await useMyFetch(`${locale.value}/specialties/?search=${newVal}`)\n    results.value = data.value;\n    if (data.value) {\n        if (data.value.specialties.length) specialties.value = sortByName(data.value.specialties);\n        else specialties.value = [];\n\n        if (data.value.doctors && data.value.doctors.length) doctors.value = sortByName(data.value.doctors);\n        else doctors.value = [];\n    }\n})\n\nconst isNextLetter = (arr, index) => {\n    if (index == 0) return true;\n    return arr[index].name.charAt(0) != arr[index - 1].name.charAt(0);\n}\n\nfunction sortByName(arr) {\n    let result = arr.sort((a, b) => {\n        const nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        const nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n            return -1;\n        }\n        if (nameA > nameB) {\n            return 1;\n        }\n\n        // names must be equal\n        return 0;\n    });\n\n    return result;\n}\n</script>\n\n<template>\n    <form @submit.prevent class=\"w-full relative\" v-click-outside=\"() => isFocused = false\">\n        <div class=\"relative overflow-hidden\">\n            <div class=\"absolute inset-y-0 left-4 flex items-center pointer-events-none max-md:w-[18px] \">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                    <path opacity=\"0.4\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                        d=\"M2.75 11.5C2.75 16.3325 6.66751 20.25 11.5 20.25C16.3325 20.25 20.25 16.3325 20.25 11.5C20.25 6.66751 16.3325 2.75 11.5 2.75C6.66751 2.75 2.75 6.66751 2.75 11.5ZM11.5 21.75C5.83908 21.75 1.25 17.1609 1.25 11.5C1.25 5.83908 5.83908 1.25 11.5 1.25C17.1609 1.25 21.75 5.83908 21.75 11.5C21.75 14.0605 20.8111 16.4017 19.2589 18.1982L22.5303 21.4697C22.8232 21.7626 22.8232 22.2374 22.5303 22.5303C22.2374 22.8232 21.7626 22.8232 21.4697 22.5303L18.1982 19.2589C16.4017 20.8111 14.0605 21.75 11.5 21.75Z\"\n                        fill=\"#002168\" />\n                </svg>\n            </div>\n            <input type=\"text\" autocomplete=\"off\" @input=\"updateValue\" v-model=\"inputModelValue\"\n                class=\"block h-12 w-full p-4 pl-12 text-sm caret-blue text-darkBlue placeholder:text-[#92A3C3] bg-bg hover:bg-[#DBE3F0] active:bg-[#C2CEE1] focus:bg-white focus:active:bg-white border border-[rgba(0,0,0,0)] focus:border-blue focus:outline-none rounded-lg\"\n                :placeholder=\"props.placeholder\" @focus=\"isFocused = true\">\n        </div>\n        <div class=\"py-4 bg-white rounded-lg absolute top-full mt-2 left-0 w-full results z-[10] max-h-[60vh] overflow-auto scrollbar-style\"\n            v-if=\"isList && isFocused && results\">\n            <div class=\"flex flex-col gap-4\" v-if=\"specialties.length || doctors.length\">\n                <div class=\"flex flex-col\" v-if=\"specialties.length\">\n                    <p class=\"text-xs text-secondary leading-normal pl-4\">{{ $t(\"specialties\") }}</p>\n                    <NuxtLinkLocale :to=\"`/?specialty_id=${item.id}`\" @click=\"isFocused = false\"\n                        class=\"flex-y-center gap-4 px-4 h-[50px] hover:bg-[#E5E9F0] active:bg-[#CCD3E1] focus-visible:bg-[#E5E9F0] focus:outline-none outline-none rounded-lg transition-100\"\n                        v-for=\"(item, index) in specialties\" :key=\"item.key\">\n                        <div class=\"w-6 h-6\">\n                            <span class=\"bg-bg w-6 h-6 flex-center rounded text-base text-secondary font-bold leading-normal uppercase\"\n                                v-if=\"isNextLetter(specialties, index)\">\n                                {{ item.name.charAt(0) }}\n                            </span>\n                        </div>\n                        <p class=\"text-sm text-darkBlue leading-normal\">{{ item.name }}</p>\n                    </NuxtLinkLocale>\n                </div>\n                <div class=\"flex flex-col\" v-if=\"doctors && doctors.length\">\n                    <p class=\"text-xs text-secondary leading-normal pl-4\">{{ $t(\"doctors\") }}</p>\n                    <NuxtLinkLocale :to=\"`/doctor/${item.id}`\" @click=\"isFocused = false\"\n                        class=\"flex-y-center gap-4 px-4 h-[50px] hover:bg-[#E5E9F0] active:bg-[#CCD3E1] focus-visible:bg-[#E5E9F0] focus:outline-none outline-none rounded-lg transition-100\"\n                        v-for=\"(item, index) in doctors\" :key=\"item.key\">\n                        <div class=\"w-6 h-6\">\n                            <span class=\"bg-bg w-6 h-6 flex-center rounded text-base text-secondary font-bold leading-normal uppercase\"\n                                v-if=\"isNextLetter(doctors, index)\">\n                                {{ item.name.charAt(0) }}\n                            </span>\n                        </div>\n                        <p class=\"text-sm text-darkBlue leading-normal\">{{ item.name }}</p>\n                    </NuxtLinkLocale>\n                </div>\n            </div>\n            <div class=\"px-4 text-sm text-darkBlue leading-normal\" v-else>{{ $t(\"notfound\") }}</div>\n        </div>\n    </form>\n</template>\n\n<style>\n.results {\n    box-shadow: 0px 18px 88px -4px rgba(24, 39, 75, 0.14), 0px 8px 28px -6px rgba(24, 39, 75, 0.12);\n}\n</style>\n"],"names":[],"mappings":";;;;AAEA,MAAe,qDAAgB;AAAA,EAC7B,MAAM;AAAA,EACN,cAAc;AAAA;AAAA,EAEd,OAAO,CAAC,YAAY,eAAe,kBAAkB,aAAa;AAAA,EAClE,MAAM,GAAG,EAAE,OAAO,MAAK,GAAI;AACzB,UAAM,UAAU,IAAI,KAAK;AAIzB,WAAO,CAAC,UAAU;;AAChB,UAAI,QAAQ,OAAO;AACjB,gBAAO,WAAM,YAAN;AAAA,MACR;AACD,YAAM,OAAO,MAAM,YAAY,MAAM;AACrC,UAAI,MAAM;AACR,eAAO,KAAI;AAAA,MACZ;AACD,YAAM,cAAc,MAAM,YAAY,MAAM,eAAe;AAC3D,YAAM,cAAc,MAAM,eAAe,MAAM,kBAAkB;AACjE,aAAO,mBAAmB,aAAa,OAAO,WAAW;AAAA,IAC/D;AAAA,EACG;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;ACxBD,UAAM,EAAE,OAAM,IAAK;AAEnB,UAAM,QAAQ;AAed,UAAM,kBAAkB,IAAI,IAAI;AAChC,oBAAgB,QAAQ,MAAM;AAO9B,UAAM,WAAW,IAAI,IAAI;AACzB,UAAM,YAAY,IAAI,KAAK;AAE3B,UAAM,UAAU,IAAI,IAAI;AACxB,UAAM,cAAc,IAAI,CAAA,CAAE;AAC1B,UAAM,UAAU,IAAI,CAAA,CAAE;AACtB,UAAM,iBAAiB,OAAO,WAAW;AACrC,eAAS,QAAQ;AACjB,UAAI,CAAC,MAAM;AAAQ;AAEnB,gBAAU,QAAQ;AAClB,YAAM,EAAE,SAAS,MAAM,WAAW,GAAG,OAAO,KAAK,wBAAwB,MAAM,EAAE;AACjF,cAAQ,QAAQ,KAAK;AACrB,UAAI,KAAK,OAAO;AACZ,YAAI,KAAK,MAAM,YAAY;AAAQ,sBAAY,QAAQ,WAAW,KAAK,MAAM,WAAW;AAAA;AACnF,sBAAY,QAAQ;AAEzB,YAAI,KAAK,MAAM,WAAW,KAAK,MAAM,QAAQ;AAAQ,kBAAQ,QAAQ,WAAW,KAAK,MAAM,OAAO;AAAA;AAC7F,kBAAQ,QAAQ;MACxB;AAAA,IACL,CAAC;AAED,UAAM,eAAe,CAAC,KAAK,UAAU;AACjC,UAAI,SAAS;AAAG,eAAO;AACvB,aAAO,IAAI,KAAK,EAAE,KAAK,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC,EAAE,KAAK,OAAO,CAAC;AAAA,IACpE;AAEA,aAAS,WAAW,KAAK;AACrB,UAAI,SAAS,IAAI,KAAK,CAAC,GAAG,MAAM;AAC5B,cAAM,QAAQ,EAAE,KAAK,YAAW;AAChC,cAAM,QAAQ,EAAE,KAAK,YAAW;AAChC,YAAI,QAAQ,OAAO;AACf,iBAAO;AAAA,QACV;AACD,YAAI,QAAQ,OAAO;AACf,iBAAO;AAAA,QACV;AAGD,eAAO;AAAA,MACf,CAAK;AAED,aAAO;AAAA,IACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}