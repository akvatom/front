{"version":3,"file":"_doctor-id_-02ec3906.js","sources":["../../../../components/Card/Detail.vue","../../../../assets/icons/star_full.svg","../../../../assets/icons/chatting.svg","../../../../assets/icons/user-avatar.svg","../../../../assets/icons/user-avatar-female.svg","../../../../assets/icons/star_empty.svg","../../../../components/Card/Comments.vue","../../../../components/Page/CommentModal.vue","../../../../utils/index.ts","../../../../composables/useDeviceId.js","../../../../pages/doctor/[doctor-id].vue"],"sourcesContent":["<script setup>\nconst { t } = useI18n();\nconst props = defineProps([\"doctor\", \"selectedDateIndex\", \"selectedHourIndex\"]);\n\nconst schedule = props.doctor.schedule.filter((day) => day.time.length > 0);\n\nconst days = ref([]);\nconst hours = ref([]);\nconst selectedDay = ref(0);\nconst selectedHour = ref(0);\nschedule.map((item, index) => {\n  const date = new Date(item.date);\n  const weekday = t(`weekdays[${date.getDay()}]`);\n  days.value.push(`${weekday}, ${date.getDate().toString().padStart(2, \"0\")}`);\n});\n\ngetHours();\n\nconst onDayChange = (e) => {\n  selectedDay.value = e.index;\n  getHours();\n};\n\nconst onHourChange = (e) => {\n  selectedHour.value = e.index;\n};\n\nfunction getHours() {\n  if (!schedule.length) return;\n\n  let temp = [];\n  schedule[selectedDay.value].time.map((item, index) => {\n    temp.push(item.exactly_time.slice(0, 5));\n  });\n  hours.value = temp;\n}\n\nconst getSelectedDate = (isMonth = false) => {\n  let selected = schedule[selectedDay.value].date;\n  const date = new Date(selected);\n  if (isMonth) return date.getMonth();\n  else return date.getDate();\n};\nconst onMoveThrough = (idx) => {\n  selectedHour.value = idx;\n};\nconst onDayMove = (idx) => {\n  selectedDay.value = idx;\n  getHours();\n};\n\nconst dateButtonText = computed(() => {\n  if (hours.value.length > 0) {\n    return t(`bookTime`, { time: hours.value[selectedHour.value], date: t(`months[${getSelectedDate(true)}]`, { day: getSelectedDate(), }) });\n  } else return \"Please select a date\";\n});\n\nconst selectedDayQuery = useState(\"useSelectedDayQuery\");\nconst selectedHourQuery = useState(\"useSelectedHourQuery\");\nschedule.map((day, index) => {\n  if (day.date == selectedDayQuery.value) {\n    selectedDay.value = index;\n    getHours();\n    day.time.map((hour, index) => {\n      if (hour.id == selectedHourQuery.value) {\n        selectedHour.value = index;\n      }\n    });\n  }\n});\n</script>\n\n<template>\n  <div class=\"flex max-lg:flex-col gap-5\">\n    <div class=\"p-4 bg-white rounded-2xl flex max-md:flex-col gap-4 max-md:mt-[130px] lg:grow\">\n      <div class=\"relative h-fit w-fit shrink-0 max-md:self-center max-md:-mt-[142px]\">\n        <img class=\"rounded-2xl\" width=\"188\" height=\"236\" :src=\"doctor.avatar_300_375\" :alt=\"doctor.full_name\" />\n        <div v-if=\"doctor.experience\"\n          class=\"absolute bottom-0 left-0 w-full h-6 bg-red rounded-b-2xl flex-center text-sm text-white\">\n          <span>{{ $t(\"experience\", { year: doctor.experience }) }}</span>\n        </div>\n      </div>\n      <div class=\"md:p-4 flex flex-col gap-4 flex-grow\">\n        <p class=\"text-lg font-bold text-darkBlue leading-normal\">\n          {{ doctor.full_name }}\n        </p>\n        <div class=\"flex gap-4\">\n          <div class=\"flex flex-col justify-between gap-1\">\n            <div class=\"flex-y-center flex-wrap gap-1\">\n              <div class=\"flex-y-center gap-1\" v-for=\"(item, index) in doctor.specialties\" :key=\"item.key\">\n                <svg v-if=\"index != 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2\" height=\"2\" viewBox=\"0 0 2 2\"\n                  fill=\"none\">\n                  <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"#1D7ED8\" />\n                </svg>\n                <p class=\"text-sm text-blue leading-normal\">{{ item.name }}</p>\n              </div>\n            </div>\n            <p class=\"text-sm text-secondary leading-normal\">\n              {{ doctor.degree.name }}\n            </p>\n          </div>\n          <div class=\"bg-dividers w-[1px]\"></div>\n          <div class=\"flex flex-col justify-between gap-1\">\n            <div class=\"flex-y-center gap-1\">\n              <IconRating :rating=\"doctor.average_rating\" />\n              <div class=\"px-1 py-0.5 rounded bg-[#FEF9EB] text-xs font-bold text-yellow leading-normal\">\n                {{ doctor.average_rating.toFixed(1) }}\n              </div>\n            </div>\n            <p class=\"text-sm text-red leading-normal\">\n              {{ $t(\"ratingsCount\", { count: doctor.count_of_ratings }) }}\n            </p>\n          </div>\n        </div>\n        <div class=\"flex flex-col gap-1\">\n          <div class=\"line-clamp-3 md:line-clamp-6 text-sm text-darkBlue desc\" v-html=\"doctor.description\"></div>\n          <div class=\"text-sm text-red leading-normal flex cursor-pointer\" @click=\"$emit('descOpen')\">\n            {{ $t(\"moreAbout\") }}\n            <span class=\"w-[18px] h-[18px] flex-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"10\" viewBox=\"0 0 6 10\" fill=\"none\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                  d=\"M1.14863 9.18922C0.906045 8.99515 0.866714 8.64117 1.06078 8.39859L3.77967 4.99998L1.06078 1.60137C0.866714 1.35878 0.906045 1.00481 1.14863 0.81074C1.39121 0.616672 1.74519 0.656003 1.93926 0.898588L4.93926 4.64859C5.10361 4.85402 5.10361 5.14593 4.93926 5.35137L1.93926 9.10137C1.74519 9.34396 1.39121 9.38329 1.14863 9.18922Z\"\n                  fill=\"#E82C71\" />\n              </svg>\n            </span>\n          </div>\n        </div>\n        <hr class=\"border-dividers border-t\" />\n        <div class=\"flex flex-col gap-1\">\n          <p class=\"text-xs text-secondary\">{{ $t(\"narxi\") }}:</p>\n          <div class=\"flex-y-center gap-2\">\n            <p class=\"text-sm font-bold text-darkBlue leading-normal\" v-if=\"doctor.discount_price\">\n              {{ numberWithSpaces(doctor.discount_price) }} сум\n            </p>\n            <p class=\"text-sm font-bold text-darkBlue leading-normal\" v-else>\n              {{ numberWithSpaces(doctor.original_price) }} сум\n            </p>\n            <div class=\"flex-y-center gap-1\" v-if=\"doctor.discount_price\">\n              <p class=\"text-xs text-red line-through leading-normal\">\n                {{ numberWithSpaces(doctor.original_price) }} сум\n              </p>\n              <div class=\"bg-blue bg-opacity-10 rounded px-1 py-0.5 text-xs font-bold text-blue leading-normal\">\n                -{{ Math.floor(100 - (doctor.discount_price * 100) / doctor.original_price) }}%\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr class=\"border-dividers border-t\" />\n        <a :href=\"`geo:${doctor.clinic.latitude},${doctor.clinic.longitude}`\"\n          class=\"flex gap-8 items-center py-4 px-2 hover:bg-[#E5E9F0] active:bg-[#CCD3E1] rounded-xl\">\n          <div class=\"flex gap-1 items-center w-3/5\">\n            <IconLocation />\n            <div class=\"flex flex-col gap-1\">\n              <div class=\"text-xs text-secondary line-clamp-1\">\n                {{ doctor.clinic.address }}\n              </div>\n              <div class=\"text-sm text-darkBlue font-bold\">\n                {{ doctor.clinic.name }}\n              </div>\n            </div>\n          </div>\n          <div class=\"flex gap-1 items-center\">\n            <div class=\"w-[18px] h-[18px] flex items-center justify-center\">\n              <img src=\"~/assets/icons/metro.svg\" alt=\"metro\" />\n            </div>\n            <div class=\"flex flex-col gap-0.5\">\n              <div class=\"text-xs text-secondary\">\n                {{ usePrettyDistance(doctor.clinic.distance) }}\n              </div>\n              <div class=\"text-sm text-darkBlue font-bold leading-4\">\n                {{ doctor.clinic.metro.name }}\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n    </div>\n    <div class=\"p-4 bg-white h-fit rounded-2xl lg:w-[392px] lg:shrink-0\">\n      <div class=\"flex flex-col gap-4\" v-if=\"schedule.length\">\n        <div class=\"flex-y-center gap-1\">\n          <img src=\"~/assets/icons/clock.svg\" alt=\"clock\" />\n          <p class=\"text-xs text-secondary leading-normal\">\n            {{ $t(\"dateTime\") }}:\n          </p>\n        </div>\n        <div class=\"flex gap-2 z-0\">\n          <BaseDatePicker class=\"w-2/3\" uniqueID=\"flicking-day\" :panels=\"days\" @on-change=\"onDayChange\"\n            @move-through=\"onDayMove\" :selected=\"selectedDateIndex\" />\n          <BaseDatePicker class=\"w-1/3\" uniqueID=\"flicking-hour\" :panels=\"hours\" @on-change=\"onHourChange\"\n            @move-through=\"onMoveThrough\" :selected=\"selectedHourIndex\" :panel-index=\"selectedHourQuery\" />\n        </div>\n        <BaseButton state=\"primary\" @click=\"$emit('onApply', selectedDay, selectedHour)\" :is-disabled=\"!hours.length\">\n          {{ dateButtonText }}\n        </BaseButton>\n      </div>\n      <div class=\"flex flex-col gap-4\" v-else>\n        <div class=\"flex-y-center gap-1\">\n          <img src=\"~/assets/icons/clock.svg\" alt=\"clock\" />\n          <p class=\"text-xs text-secondary leading-normal\">\n            {{ $t(\"submitApplication[0]\") }}\n          </p>\n        </div>\n        <BaseButton state=\"primary\" @click=\"$emit('onApply', null, null)\">\n          {{ $t(\"submitApplication[1]\") }}\n        </BaseButton>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.desc {\n  word-break: break-word;\n}\n</style>\n","export default \"__VITE_ASSET__8c9c01ed__\"","export default \"__VITE_ASSET__150e9dc5__\"","export default \"__VITE_ASSET__77e264f6__\"","export default \"__VITE_ASSET__384464a2__\"","export default \"__VITE_ASSET__9851bb32__\"","<script setup>\nconst props = defineProps(['doctor'])\n\nconst getPublishedDate = (val) => {\n    const date = new Date(val);\n    const day = (date.getDate()).toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}.${month}.${year}`;\n}\n</script>\n\n<template>\n    <div class=\"bg-white rounded-2xl p-4 flex flex-col gap-4 lg:w-[calc(2/3*100%-10px)]\">\n        <div class=\"flex-y-center gap-1\">\n            <p class=\"text-lg text-darkBlue font-bold leading-normal\">{{ $t(\"comments\") }}</p>\n            <img src=\"~/assets/icons/info.svg\" alt=\"information\">\n        </div>\n        <div class=\"flex gap-4\">\n            <div class=\"flex flex-col gap-1\">\n                <p class=\"text-xs text-secondary leading-normal\">{{ $t(\"overallRating\") }}:</p>\n                <div class=\"flex-y-center gap-1\">\n                    <img src=\"~/assets/icons/star_full.svg\" alt=\"Average rating\">\n                    <p class=\"text-darkBlue font-bold text-2xl leading-normal\">\n                        {{ doctor.average_rating.toFixed(1) }}\n                    </p>\n                </div>\n            </div>\n            <div class=\"bg-dividers w-[1px]\"></div>\n            <div class=\"flex flex-col gap-1\">\n                <p class=\"text-xs text-secondary leading-normal\">{{ $t(\"numberRating\") }}:</p>\n                <div class=\"flex-y-center gap-1\">\n                    <img src=\"~/assets/icons/chatting.svg\" alt=\"Number of ratings\">\n                    <p class=\"text-darkBlue font-bold text-2xl leading-normal\">{{ doctor.count_of_ratings }}</p>\n                </div>\n            </div>\n        </div>\n        <BaseButton class=\"font-normal\" state=\"secondary\" @click=\"$emit('comment')\">{{ $t(\"leaveComment\") }}</BaseButton>\n        <div class=\"flex flex-col gap-4\">\n            <div class=\"flex flex-col gap-4\" v-for=\"(item, index) in doctor.ratings\" :key=\"item.id\">\n                <hr class=\"border-t border-dividers\" v-if=\"index != 0\">\n                <div class=\"flex flex-col gap-2\">\n                    <div class=\"flex-y-center gap-2\">\n                        <img class=\"rounded-full\" src=\"~/assets/icons/user-avatar.svg\" alt=\"avatar\"\n                            v-if=\"item.person.gender == 'M'\">\n                        <img class=\"rounded-full\" src=\"~/assets/icons/user-avatar-female.svg\" alt=\"avatar\" v-else>\n                        <div class=\"flex flex-col gap-1\">\n                            <p class=\"text-sm font-bold text-darkBlue leading-normal\">{{ item.person.first_name }}</p>\n                            <p class=\"text-xs text-secondary leading-normal\">{{ getPublishedDate(item.created_at) }}\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"flex-y-center gap-1\">\n                        <div class=\"flex gap-0.5\">\n                            <img src=\"~/assets/icons/star_full.svg\" alt=\"star\" v-for=\"star in item.ball\" :key=\"star.key\"\n                                width=\"16\" height=\"16\">\n                            <img src=\"~/assets/icons/star_empty.svg\" alt=\"star\" v-for=\"empty in (5 - item.ball)\"\n                                :key=\"empty.key\">\n                        </div>\n                        <span class=\"bg-yellow bg-opacity-10 rounded px-1 py-0.5 text-xs font-bold text-yellow\">{{\n                            $t(`rating[${item.ball - 1}]`) }}</span>\n                    </div>\n                    <div class=\"text-sm text-darkBlue leading-normal\" v-html=\"item.text\" v-if=\"item.text\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n","<script setup>\nconst { locale } = useI18n();\nimport { useReCaptcha } from 'vue-recaptcha-v3';\nconst recaptchaInstance = useReCaptcha();\n\nconst props = defineProps({\n    isOpen: {\n        required: true,\n        type: Boolean,\n    },\n    doctor: {\n        required: true,\n        type: Number,\n    },\n})\n\nconst emit = defineEmits(['close'])\n\nconst isAuthenticated = useAuthenticated();\n\nconst isSubmitted = ref(false);\nconst isSubmittedError = ref(false);\nconst loading = ref(false);\nconst comment = ref(null);\nconst rating = ref(0);\n\nconst recaptcha = async () => {\n  await recaptchaInstance?.recaptchaLoaded();\n  const token = await recaptchaInstance?.executeRecaptcha('yourActionHere');\n  return token;\n};\n\nconst onSubmit = async (e) => {\n    if (!rating.value) return;\n    const access = useCookie(\"access\");\n    const recaptcha_token = await recaptcha();\n\n    const body = {\n        recaptcha_token,\n        ball: rating.value,\n        text: comment.value.trim(),\n        doctor: props.doctor,\n    };\n\n    const { data, error } = await useMyFetch(`${locale.value}/ratings/create/`, {\n        method: 'POST',\n        body: body,\n        headers: {\n            Authorization: `Bearer ${access.value}`\n        },\n    })\n    loading.value = false\n    isSubmitted.value = true;\n    if (data.value) isSubmittedError.value = false;\n    else isSubmittedError.value = true;\n}\n\nconst unSubmit = () => {\n    isSubmitted.value = false;\n    isSubmittedError.value = false;\n    emit('close');\n    rating.value = 0;\n    comment.value = null;\n}\n\n\nconst loginTitle = useLoginTitle();\nconst isLoginOpen = useLoginModal();\nconst useRedirectUrl = useRedirect();\nwatch(() => props.isOpen, newVal => {\n    if (!isAuthenticated.value) {\n        useRedirectUrl.value = {\n            link: `/doctor/${props.doctor}`,\n            action: 'comment',\n        };\n        loginTitle.value = 'loginTitle.comment';\n        isLoginOpen.value = newVal;\n    }\n})\nwatch(isLoginOpen, newVal => { if (!newVal) emit('close') });\n\n</script>\n\n<template>\n    <div v-if=\"isAuthenticated\">\n        <Transition name=\"fade\" mode=\"out-in\">\n            <PageModal v-if=\"isOpen\" :is-open=\"isOpen\" @close=\"$emit('close')\">\n                <template #body>\n                    <div\n                        class=\"bg-white rounded-2xl p-4 fixed-center w-[calc(100%-32px)] max-w-[400px] relative z-[99] max-h-[80%] overflow-auto scrollbar-style\">\n                        <form @submit.prevent class=\"flex flex-col gap-8\" v-if=\"!isSubmitted\">\n                            <p class=\"text-2xl text-darkBlue font-bold leading-normal text-center\">Оставьте отзыв</p>\n                            <div class=\"relative w-fit self-center\">\n                                <div class=\"flex-center gap-1.5 w-fit z-[1] relative\">\n                                    <div v-for=\"star in 5\" :key=\"star.key\" @click=\"rating = star\"\n                                        class=\"w-12 h-12 flex-center cursor-pointer\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"49\" height=\"48\" viewBox=\"0 0 49 48\"\n                                            fill=\"none\">\n                                            <path\n                                                d=\"M27.0793 7.18605L29.8607 13.0456C30.7057 14.8257 32.3548 16.0878 34.2952 16.3809L40.5146 17.3206C42.8223 17.6692 43.902 20.7409 42.1025 22.5646L37.6021 27.1256C36.2235 28.5228 35.6075 30.5181 35.928 32.461L36.9904 38.9012C37.4241 41.53 34.8268 43.2445 32.8239 42.1497L27.2611 39.109C25.5346 38.1653 23.4654 38.1653 21.7389 39.109L16.1761 42.1497C14.1732 43.2445 11.5759 41.53 12.0096 38.9012L13.072 32.461C13.3925 30.5181 12.7765 28.5228 11.3979 27.1256L6.89748 22.5646C5.09797 20.7409 6.17773 17.6692 8.4854 17.3206L14.7048 16.3809C16.6452 16.0878 18.2943 14.8257 19.1393 13.0456L21.9207 7.18606C22.9878 4.93798 26.0122 4.93798 27.0793 7.18605Z\"\n                                                stroke=\"#F9A830\" stroke-width=\"3\" stroke-linejoin=\"round\" />\n                                        </svg>\n                                    </div>\n                                </div>\n                                <div class=\"absolute top-0 left-0 flex-y-center gap-1.5 overflow-hidden transition-300 z-0\"\n                                    :style=\"`width: calc(20% * ${rating});`\">\n                                    <div v-for=\"star in 5\" :key=\"star.key\" class=\"w-12 h-12 flex-center cursor-pointer\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"49\" height=\"48\" viewBox=\"0 0 49 48\"\n                                            fill=\"none\">\n                                            <path fill=\"#F9A830\"\n                                                d=\"M20.5656 6.54282C22.175 3.1524 26.825 3.15239 28.4344 6.54282L31.2158 12.4024C31.8549 13.7487 33.0902 14.6819 34.5193 14.8978L40.7387 15.8374C44.3373 16.3811 45.7743 20.9791 43.1703 23.6182L38.6698 28.1792C37.6358 29.2272 37.1639 30.7371 37.408 32.2168L38.4704 38.6571C39.0852 42.3835 35.3232 45.2253 32.1045 43.4659L26.5417 40.4252C25.2635 39.7266 23.7365 39.7266 22.4583 40.4252L16.8955 43.4659C13.6768 45.2253 9.91485 42.3835 10.5296 38.6571L11.592 32.2168C11.8361 30.7371 11.3642 29.2272 10.3302 28.1792L5.82975 23.6182C3.22573 20.9791 4.66266 16.3811 8.26132 15.8374L14.4807 14.8978C15.9098 14.6819 17.1451 13.7487 17.7842 12.4024L20.5656 6.54282Z\" />\n                                            <path stroke=\"#F9A830\" stroke-width=\"3\" stroke-linejoin=\"round\"\n                                                d=\"M27.0793 7.18605L29.8607 13.0456C30.7057 14.8257 32.3548 16.0878 34.2952 16.3809L40.5146 17.3206C42.8223 17.6692 43.902 20.7409 42.1025 22.5646L37.6021 27.1256C36.2235 28.5228 35.6075 30.5181 35.928 32.461L36.9904 38.9012C37.4241 41.53 34.8268 43.2445 32.8239 42.1497L27.2611 39.109C25.5346 38.1653 23.4654 38.1653 21.7389 39.109L16.1761 42.1497C14.1732 43.2445 11.5759 41.53 12.0096 38.9012L13.072 32.461C13.3925 30.5181 12.7765 28.5228 11.3979 27.1256L6.89748 22.5646C5.09797 20.7409 6.17773 17.6692 8.4854 17.3206L14.7048 16.3809C16.6452 16.0878 18.2943 14.8257 19.1393 13.0456L21.9207 7.18606C22.9878 4.93798 26.0122 4.93798 27.0793 7.18605Z\" />\n                                        </svg>\n                                    </div>\n                                </div>\n                            </div>\n                            <textarea name=\"comment\" id=\"comment\" placeholder=\"Напишите комментарий\" v-model=\"comment\"\n                                class=\"w-full h-[140px] p-4 bg-bg rounded-lg text-sm text-darkBlue leading-normal placeholder:text-secondary resize-none outline-none\" />\n                            <BaseButton state=\"primary\" type=\"submit\" @click=\"onSubmit\" :is-disabled=\"!rating\"\n                                :is-loading=\"loading\">Оставить отзыв</BaseButton>\n                        </form>\n                        <form @submit.prevent class=\"flex-y-center flex-col gap-4\" v-else>\n                            <img v-if=\"!isSubmittedError\" width=\"96\" height=\"96\" src=\"~/assets/icons/submitted.svg\"\n                                alt=\"submitted\">\n                            <img v-else width=\"96\" height=\"96\" src=\"~/assets/icons/submitted-error.svg\"\n                                alt=\"submitted error\">\n                            <div v-if=\"!isSubmittedError\" class=\"flex flex-col gap-2\">\n                                <p class=\"text-2xl font-bold leading-normal text-darkBlue text-center\">Спасибо за ваш отзыв!\n                                </p>\n                                <p class=\"text-sm text-darkBlue leading-normal text-center\">\n                                    Если вы записывались через наш сервис и были на приёме у врача, то мы учтём ваш отзыв в\n                                    формировании рейтинга\n                                </p>\n                            </div>\n                            <div v-else class=\"flex flex-col gap-2\">\n                                <p class=\"text-2xl font-bold leading-normal text-darkBlue text-center\">Произошла ошибка\n                                </p>\n                                <p class=\"text-sm text-darkBlue leading-normal text-center\">\n                                    Ваш номер отсутствует в списке пациентов, записавшихся на приём.\n                                </p>\n                            </div>\n                            <BaseButton class=\"w-full\" state=\"primary\" type=\"submit\" @click=\"unSubmit\">Хорошо</BaseButton>\n                        </form>\n\n                        <img class=\"absolute top-4 right-4 cursor-pointer\" @click=\"$emit('close')\"\n                            src=\"~/assets/icons/close.svg\" alt=\"close\">\n                    </div>\n                </template>\n            </PageModal>\n        </Transition>\n    </div>\n</template>\n","export function generateUUID() {\n  // Public Domain/MIT\n  let d = new Date().getTime(); // Timestamp\n  let d2 =\n    (typeof performance !== \"undefined\" &&\n      performance.now &&\n      performance.now() * 1000) ||\n    0; // Time in microseconds since pages-load or 0 if unsupported\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16; // random number between 0 and 16\n    if (d > 0) {\n      // Use timestamp until depleted\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      // Use microseconds since pages-load if supported\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n","import { generateUUID } from '~/utils'\n\nexport default function getDeviceId() {\n  const deviceId = useCookie(\"device_id\");\n  if (!deviceId.value) {\n    deviceId.value = generateUUID();\n  }\n  return deviceId.value;\n}\n","<script setup>\nimport { useReCaptcha } from 'vue-recaptcha-v3';\nconst recaptchaInstance = useReCaptcha();\nconst { locale, t } = useI18n();\nconst route = useRoute();\nconst id = route.params.doctorid;\n\nconst isDescOpen = ref(false);\nconst isFormOpen = ref(false);\nconst isCommentOpen = ref(false);\nconst isDatePicker = ref(false);\nconst isSubmitted = ref(false);\nconst isSubmittedError = ref(false);\nconst isSubmitting = ref(false);\n\nconst { data: doctor } = await useMyFetch(\n  `/${locale.value}/doctors/${id}/?device_id=${useDeviceId()}&format=json`\n);\nconst doctorSchedule = doctor.value.schedule.filter(\n  (item) => item.time.length > 0\n);\n\nconst htmlToText = (html) => html?.replace(/<[^>]*>?/gm, \"\").slice(0, 160);\nuseSeoMeta({\n  title: doctor.value.full_name || t(\"title\"),\n  description: htmlToText(doctor.value.description) || t(\"description\"),\n  ogTitle: doctor.value.full_name || t(\"title\"),\n  ogDescription: htmlToText(doctor.value.description) || t(\"description\"),\n  twitterTitle: doctor.value.full_name || t(\"title\"),\n  twitterDescription: htmlToText(doctor.value.description) || t(\"description\"),\n  twitterCard: \"summary\",\n  ogImage: doctor.value.avatar || \"/og-image.png\",\n  twitterImage: doctor.value.avatar || \"/og-image.png\",\n});\n\nconst days = ref([]);\nconst hours = ref([]);\n\ndoctor.value.schedule.map((item, index) => {\n  const date = new Date(item.date);\n  const weekday = t(`weekdays[${date.getDay()}]`);\n  days.value.push(`${weekday}, ${date.getDate().toString().padStart(2, \"0\")}`);\n});\n\nconst user = useUserInfo();\nif (!user.value) await usePersonalData(locale.value);\n\nconst first_name = ref(null);\nconst last_name = ref(null);\nconst birth_date = ref(null);\nconst phone_number = ref(null);\n\nif (user.value) {\n  first_name.value = user.value.first_name;\n  last_name.value = user.value.last_name;\n  birth_date.value = user.value.date_birthday\n    ? user.value.date_birthday.split(\"-\").reverse().join(\".\")\n    : null;\n  phone_number.value = user.value.phone_number;\n}\n\nconst errorFirst = ref(false);\nconst errorLast = ref(false);\nconst errorBirth = ref(false);\n\nconst validate = (val = \"all\") => {\n  if (val == \"first\" || val == \"all\") {\n    if (!first_name.value || first_name.value.trim().length < 3)\n      errorFirst.value = true;\n    else errorFirst.value = false;\n  }\n\n  if (val == \"last\" || val == \"all\") {\n    if (!last_name.value || last_name.value.trim().length < 3)\n      errorLast.value = true;\n    else errorLast.value = false;\n  }\n\n  if (val == \"birth\" || val == \"all\") {\n    if (!birth_date.value) errorBirth.value = true;\n    else if (birth_date.value.length == 10) {\n      const day = birth_date.value.substring(0, 2);\n      const month = birth_date.value.substring(3, 5);\n      const year = birth_date.value.substring(6, 10);\n      errorBirth.value = !isDateValid(year, month, day);\n    } else {\n      errorBirth.value = false;\n    }\n  }\n\n  return !errorFirst.value && !errorLast.value && !errorBirth.value;\n};\nconst isDateValid = (dateStr) => {\n  return !isNaN(new Date(dateStr));\n};\n\nconst selectedDate = ref(null);\nconst selectedHour = ref(null);\nconst selectedDateIndex = ref(0);\nconst selectedHourIndex = ref(0);\nconst selectedMonth = ref(null);\nconst selectedDay = ref(null);\nconst selectDate = (day, hour) => {\n  getHours();\n  selectedDateIndex.value = day;\n  selectedHourIndex.value = hour;\n\n  selectedDate.value = doctorSchedule[day];\n  selectedHour.value = selectedDate.value?.time[hour];\n  isFormOpen.value = true;\n  isDatePicker.value = false;\n\n  const date = new Date(selectedDate.value?.date);\n  selectedMonth.value = date?.getMonth();\n  selectedDay.value = date?.getDate();\n};\n\nconst loginTitle = useLoginTitle();\nconst isLoginOpen = useLoginModal();\nconst useRedirectUrl = useRedirect();\nwatch(isFormOpen, (newVal) => {\n  if (!newVal) isDatePicker.value = false;\n\n  if (!isAuthenticated.value) {\n    useRedirectUrl.value = {\n      link: `/doctor/${id}`,\n      action: \"book\",\n    };\n    loginTitle.value = \"loginTitle.book\";\n    isLoginOpen.value = newVal;\n  }\n});\n\nconst onDayChange = (e) => {\n  selectedDateIndex.value = e.index;\n  getHours();\n};\n\nconst onHourChange = (e) => {\n  selectedHourIndex.value = e.index;\n};\n\nfunction getHours() {\n  if (!doctorSchedule.length) return;\n\n  let temp = [];\n  doctorSchedule[selectedDateIndex.value].time.map((item, index) => {\n    temp.push(item.exactly_time.slice(0, 5));\n  });\n  hours.value = temp;\n  return temp;\n}\n\ngetHours();\n\nconst recaptcha = async () => {\n  await recaptchaInstance?.recaptchaLoaded();\n  const token = await recaptchaInstance?.executeRecaptcha('yourActionHere');\n  return token;\n};\n\nconst bookDate = async () => {\n  if (!validate(\"all\")) return;\n  isSubmitting.value = true;\n\n  const body = {\n    recaptcha_token: await recaptcha(),\n  }\n\n  const { data, error } = await useMyFetch(\n    selectedDay.value\n      ? `${locale.value}/receptions/update/${selectedHour.value.id}/`\n      : `${locale.value}/receptions/create/${id}/`,\n    {\n      method: \"POST\",\n      body,\n      headers: {\n        Authorization: `Bearer ${useCookie(\"access\").value}`,\n      },\n    }\n  );\n  isSubmitted.value = true;\n  if (data.value) {\n    isSubmittedError.value = false;\n    isSubmitting.value = true;\n  } else isSubmittedError.value = true;\n};\n\nconst onMoveThrough = (idx) => {\n  selectedHourIndex.value = idx;\n};\nconst onDayMove = (idx) => {\n  selectedDateIndex.value = idx;\n  getHours();\n};\n\nconst getSelectedDate = (isMonth = false) => {\n  let selected = doctorSchedule[selectedDateIndex.value].date;\n  const date = new Date(selected);\n  if (isMonth) return date.getMonth();\n  else return date.getDate();\n};\n\nconst dateButtonText = computed(() => {\n  if (hours.value.length > 0) {\n    return `Записаться ${t(`months[${getSelectedDate(true)}]`, {\n      day: getSelectedDate(),\n    })}, в ${hours.value[selectedHourIndex.value]}`;\n  } else return \"Please select a date\";\n});\n\nconst unSubmit = () => {\n  isSubmitted.value = false;\n  isSubmittedError.value = false;\n  isFormOpen.value = false;\n};\n\nconst isAuthenticated = useAuthenticated();\nwatch(\n  () => isAuthenticated.value,\n  (newVal) => {\n    if (!newVal) return;\n\n    setTimeout(() => {\n      if (useRedirectUrl.value.action == \"book\") isFormOpen.value = true;\n      else if (useRedirectUrl.value.action == \"comment\")\n        isCommentOpen.value = true;\n    }, 1000);\n\n    if (!user.value) return;\n    first_name.value = user.value.first_name;\n    last_name.value = user.value.last_name;\n    birth_date.value = user.value.date_birthday\n      ? user.value.date_birthday.split(\"-\").reverse().join(\".\")\n      : null;\n    phone_number.value = user.value.phone_number;\n  }\n);\nwatch(isLoginOpen, (newVal) => {\n  if (!newVal) isFormOpen.value = false;\n});\n\nconst selectedDayQuery = useState(\"useSelectedDayQuery\");\nconst selectedHourQuery = useState(\"useSelectedHourQuery\");\nonMounted(() => {\n  let temp = 0;\n  doctorSchedule.map((item, index) => {\n    if (item.date == selectedDayQuery.value) temp = index;\n  });\n  if (selectedHourQuery.value) selectDate(temp, selectedHourQuery.value);\n});\n</script>\n\n<template>\n  <div class=\"container my-5\">\n    <div class=\"flex flex-col gap-5\">\n      <CardDetail :doctor=\"doctor\" :selected-date-index=\"selectedDateIndex\" :selected-hour-index=\"selectedHourIndex\"\n        @desc-open=\"isDescOpen = true\" @on-apply=\"selectDate\" />\n      <CardComments :doctor=\"doctor\" @comment=\"isCommentOpen = true\" />\n    </div>\n\n    <!-- about doctor -->\n    <Transition name=\"fade\" mode=\"out-in\">\n      <PageModal v-if=\"isDescOpen\" :is-open=\"isDescOpen\" @close=\"isDescOpen = false\">\n        <template #body>\n          <div\n            class=\"bg-white rounded-2xl p-4 fixed-center w-[calc(100%-32px)] max-w-[804px] relative z-[99] max-h-[80%] overflow-auto scrollbar-style\">\n            <div class=\"flex flex-col gap-8\">\n              <p class=\"text-2xl text-darkBlue font-bold leading-normal text-center\">\n                {{ $t(\"about\") }}\n              </p>\n              <div class=\"text-sm text-darkBlue whitespace-break-spaces desc\" v-html=\"doctor.description\"></div>\n            </div>\n            <img class=\"absolute top-4 right-4 cursor-pointer\" @click=\"isDescOpen = false\"\n              src=\"~/assets/icons/close.svg\" alt=\"close\" />\n          </div>\n        </template>\n      </PageModal>\n    </Transition>\n\n    <!-- form -->\n    <div v-if=\"isAuthenticated\">\n      <Transition name=\"fade\" mode=\"out-in\">\n        <PageModal v-if=\"isFormOpen\" :is-open=\"isFormOpen\" @close=\"isFormOpen = false\">\n          <template #body>\n            <div :class=\"{ '!max-w-[400px]': isSubmitted }\"\n              class=\"bg-white rounded-2xl p-4 fixed-center w-[calc(100%-32px)] max-w-[804px] relative z-[99] max-h-[80%] overflow-auto scrollbar-style\">\n              <form @submit.prevent class=\"flex flex-col gap-8\" v-if=\"!isDatePicker && !isSubmitted\">\n                <p class=\"text-2xl text-darkBlue font-bold leading-normal text-center\">\n                  {{ $t(\"book\") }}\n                </p>\n                <div class=\"flex gap-4\">\n                  <div class=\"relative h-fit w-fit shrink-0 self-center\">\n                    <img class=\"rounded-lg\" width=\"100\" height=\"125\" :src=\"doctor.avatar_300_375\"\n                      :alt=\"doctor.full_name\" />\n                    <div v-if=\"doctor.experience\"\n                      class=\"absolute bottom-0 left-0 w-full h-[18px] bg-red rounded-b-lg flex-center text-xs text-white\">\n                      <span>{{ $t(\"experience\", { year: doctor.experience }) }}</span>\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col gap-2\">\n                    <p class=\"text-base font-bold text-darkBlue leading-normal\">\n                      {{ doctor.full_name }}\n                    </p>\n                    <div class=\"flex flex-col gap-0.5\">\n                      <div class=\"flex-y-center gap-1\">\n                        <div class=\"flex-y-center gap-1\" v-for=\"(item, index) in doctor.specialties\" :key=\"item.key\">\n                          <svg v-if=\"index != 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2\" height=\"2\"\n                            viewBox=\"0 0 2 2\" fill=\"none\">\n                            <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"#1D7ED8\" />\n                          </svg>\n                          <p class=\"text-xs text-blue leading-normal\">\n                            {{ item.name }}\n                          </p>\n                        </div>\n                      </div>\n                      <p class=\"text-xs text-secondary leading-normal\">\n                        {{ doctor.degree.name }}\n                      </p>\n                    </div>\n                    <div class=\"flex-y-center flex-wrap gap-2\">\n                      <div class=\"flex-y-center gap-1\">\n                        <IconRating :rating=\"doctor.average_rating\" />\n                        <div class=\"px-1 py-0.5 rounded bg-[#FEF9EB] text-xs font-bold text-yellow leading-normal\">\n                          {{ doctor.average_rating.toFixed(1) }}\n                        </div>\n                      </div>\n                      <p class=\"text-sm text-red leading-normal\">\n                        {{ $t(\"ratingsCount\", { count: doctor.count_of_ratings }) }}\n                      </p>\n                    </div>\n                    <div class=\"flex-y-center flex-wrap gap-1\">\n                      <p class=\"text-xs text-secondary\">{{ $t(\"narxi\") }}:</p>\n                      <div class=\"flex-y-center flex-wrap gap-2\">\n                        <p class=\"text-sm font-bold text-darkBlue leading-normal\" v-if=\"doctor.discount_price\">\n                          {{ numberWithSpaces(doctor.discount_price) }} {{ $t('sum') }}\n                        </p>\n                        <p class=\"text-sm font-bold text-darkBlue leading-normal\" v-else>\n                          {{ numberWithSpaces(doctor.original_price) }} {{ $t('sum') }}\n                        </p>\n                        <div class=\"flex-y-center gap-1\" v-if=\"doctor.discount_price\">\n                          <p class=\"text-xs text-red line-through leading-normal\">\n                            {{ numberWithSpaces(doctor.original_price) }} {{ $t('sum') }}\n                          </p>\n                          <div\n                            class=\"bg-blue bg-opacity-10 rounded px-1 py-0.5 text-xs font-bold text-blue leading-normal\">\n                            -{{ Math.floor(100 - (doctor.discount_price * 100) / doctor.original_price) }}%\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"flex flex-col gap-4\">\n                  <div @click=\"isDatePicker = true\" v-if=\"selectedDay\"\n                    class=\"bg-bg rounded-lg px-4 py-2 h-12 flex flex-col gap-0.5 cursor-pointer hover:bg-[#DBE3F0] active:bg-[#C2CEE1]\">\n                    <p class=\"text-xs text-secondary leading-normal\">\n                      {{ $t(\"dateTime\") }}\n                    </p>\n                    <p class=\"text-sm text-darkBlue leading-normal\">\n                      {{ $t(`months[${selectedMonth}]`, { day: selectedDay }) }},\n                      {{ selectedHour.exactly_time.slice(0, 5) }}\n                    </p>\n                  </div>\n                  <BaseInput placeholder=\"input.name\" v-model=\"first_name\" inputID=\"first-name\" type=\"text\"\n                    :error=\"errorFirst ? 'error.first' : null\" @on-blur=\"validate('first')\" />\n                  <BaseInput placeholder=\"input.surname\" v-model=\"last_name\" inputID=\"last-name\" type=\"text\"\n                    :error=\"errorLast ? 'error.last' : null\" @on-blur=\"validate('last')\" />\n                  <BaseInput placeholder=\"input.birth\" v-model=\"birth_date\" inputID=\"birth-date\" type=\"text\"\n                    :is-birth=\"true\" @on-blur=\"validate('birth')\" :error=\"errorBirth ? 'error.birth' : null\" />\n                  <div class=\"flex flex-col gap-2\">\n                    <div class=\"bg-bg rounded-lg px-4 py-2 h-12 flex flex-col gap-0.5 cursor-default\">\n                      <p class=\"text-xs text-secondary leading-normal\">\n                        {{ $t(\"phoneToConfirm\") }}\n                      </p>\n                      <p class=\"text-sm text-darkBlue leading-normal\">\n                        {{ numberWithSpaces(`+998${phone_number}`, false) }}\n                      </p>\n                    </div>\n                    <div class=\"flex-y-center gap-2\">\n                      <img src=\"~/assets/icons/info.svg\" alt=\"info\" />\n                      <p class=\"text-xs text-secondary\">\n                        {{ $t(\"phoneInfo\") }}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <BaseButton @click=\"bookDate\" state=\"primary\" type=\"submit\" :is-loading=\"isSubmitting\">\n                  {{ $t(\"booking\") }}</BaseButton>\n              </form>\n              <div class=\"flex flex-col gap-4\" v-else-if=\"isDatePicker\">\n                <p class=\"text-2xl text-darkBlue font-bold leading-normal\">\n                  {{ $t(\"filter.date\") }}\n                </p>\n                <div class=\"flex gap-2\">\n                  <BaseDatePicker class=\"w-2/3\" uniqueID=\"flicking-day\" :panels=\"days\" @on-change=\"onDayChange\"\n                    @move-through=\"onDayMove\" :panel-index=\"selectedDateIndex\" />\n                  <BaseDatePicker class=\"w-1/3\" uniqueID=\"flicking-hour\" :panels=\"getHours()\" @on-change=\"onHourChange\"\n                    @move-through=\"onMoveThrough\" :panel-index=\"selectedHourIndex\" />\n                </div>\n                <BaseButton state=\"primary\" @click=\"selectDate(selectedDateIndex, selectedHourIndex)\"\n                  :is-disabled=\"!getHours().length\">\n                  {{ dateButtonText }}\n                </BaseButton>\n              </div>\n              <div class=\"flex-y-center flex-col gap-4\" v-else-if=\"isSubmitted\">\n                <div class=\"flex-y-center flex-col gap-4\" v-if=\"!isSubmittedError\">\n                  <img width=\"96\" height=\"96\" src=\"~/assets/icons/submitted.svg\" alt=\"submitted\" />\n                  <div class=\"flex-y-center flex-col gap-2\">\n                    <p class=\"text-2xl font-bold text-darkBlue leading-normal text-center\">\n                      {{ $t(\"bookSuccess\") }}\n                    </p>\n                    <p class=\"text-sm text-darkBlue leading-normal text-center\">\n                      {{ $t(\"bookSuccessInfo\") }}\n                    </p>\n                  </div>\n                  <BaseButton class=\"w-full\" state=\"primary\" @click=\"unSubmit\">{{ $t(\"nice\") }}</BaseButton>\n                </div>\n                <div class=\"flex-y-center flex-col gap-4\" v-else>\n                  <img width=\"96\" height=\"96\" src=\"~/assets/icons/submitted-error.svg\" alt=\"submitted error\" />\n                  <div class=\"flex-y-center flex-col gap-2\">\n                    <p class=\"text-2xl font-bold text-darkBlue leading-normal text-center\">\n                      {{ $t(\"bookError\") }}\n                    </p>\n                    <p class=\"text-sm text-darkBlue leading-normal text-center\">\n                      {{ $t(\"bookErrorInfo\") }}\n                    </p>\n                  </div>\n                  <BaseButton class=\"w-full\" state=\"primary\" @click=\"unSubmit\">{{ $t(\"retry\") }}</BaseButton>\n                  <BaseButton class=\"w-full font-normal\" state=\"secondary\">{{ $t(\"help\") }}</BaseButton>\n                </div>\n              </div>\n\n              <img class=\"absolute top-4 right-4 cursor-pointer\" @click=\"isFormOpen = false\"\n                src=\"~/assets/icons/close.svg\" alt=\"close\" />\n            </div>\n          </template>\n        </PageModal>\n      </Transition>\n    </div>\n\n    <!-- comment -->\n    <PageCommentModal :is-open=\"isCommentOpen\" @close=\"isCommentOpen = false\" :doctor=\"+id\" />\n  </div>\n</template>\n\n<style scoped>\n.desc {\n  word-break: break-word;\n}\n</style>\n"],"names":["index","_withAsyncContext","useDeviceId"],"mappings":"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}