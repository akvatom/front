{"version":3,"file":"index-4e48742b.js","sources":["../../../../components/Base/DropdownSort.vue","../../../../assets/icons/unselect.svg","../../../../components/Base/FilterCard.vue","../../../../assets/icons/tooltip-arrow.svg","../../../../components/Card/Doctor.vue","../../../../components/Base/Pagination.vue","../../../../components/Filter/Gender.vue","../../../../composables/useFetchWithCache.js","../../../../components/Filter/Specialties.vue","../../../../components/Filter/Date.vue","../../../../components/Filter/Metro.vue","../../../../components/Base/Filter.vue","../../../../assets/icons/filter.svg","../../../../pages/index.vue"],"sourcesContent":["<script setup>\nimport { useWindowScroll } from '@vueuse/core'\n\nconst options = useSort();\nconst selected = useSelectedSort();\nconst changeSort = (val) => {\n    selected.value = val;\n    show.value = false;\n}\n\nconst show = ref(false);\n\nconst { y } = useWindowScroll()\nwatch(() => y.value, () => { show.value = false });\n\nconst onClickOutside = () => show.value = false;\n</script>\n\n<template>\n    <div class=\"select-none relative\" v-click-outside=\"onClickOutside\">\n        <div @click=\"show = !show\"\n            class=\"px-4 py-3 flex gap-1 items-center h-10 bg-white hover:bg-[#E5E9F0] active:bg-[#CCD3E1] cursor-pointer rounded-lg w-fit\">\n            <span class=\"text-sm text-darkBlue\">{{ $t(options[selected].name) }}</span>\n            <div class=\"w-[18px] h-[18px] flex-center transition-200\" :class=\"{ '-rotate-180': show }\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                        d=\"M0.810782 1.14863C1.00485 0.906045 1.35883 0.866714 1.60141 1.06078L5.00002 3.77967L8.39863 1.06078C8.64122 0.866714 8.99519 0.906045 9.18926 1.14863C9.38333 1.39121 9.344 1.74519 9.10141 1.93926L5.35141 4.93926C5.14598 5.10361 4.85407 5.10361 4.64863 4.93926L0.89863 1.93926C0.656045 1.74519 0.616714 1.39121 0.810782 1.14863Z\"\n                        fill=\"#002168\" fill-opacity=\"0.4\" />\n                </svg>\n            </div>\n        </div>\n        <Transition name=\"dropdown-sort\" mode=\"out-in\">\n            <div v-if=\"show\"\n                class=\"absolute top-[calc(100%+4px)] left-0 z-[1] flex flex-col bg-white border border-dividers rounded-lg dropdown-shadow w-[189px]\">\n                <div v-for=\"option, index in options\" :key=\"option.key\" @click=\"changeSort(index)\"\n                    :class=\"{ 'border-b border-dividers': index != options.length - 1, 'selected': index == selected }\"\n                    class=\"group cursor-pointer bg-white rounded-lg\">\n                    <div\n                        class=\"h-12 flex-y-center justify-between px-4 rounded-lg group-hover:bg-darkBlue group-hover:bg-opacity-10 active:bg-darkBlue active:bg-opacity-20\">\n                        <p class=\"text-sm text-darkBlue group-[.selected]:font-bold\">{{ $t(option.name) }}</p>\n                        <img v-if=\"index == selected\" src=\"~/assets/icons/tick.svg\" alt=\"tick\">\n                    </div>\n                </div>\n            </div>\n        </Transition>\n    </div>\n</template>\n\n<style scoped>\n.dropdown-shadow {\n    box-shadow: 0px 8px 24px -4px rgba(24, 39, 75, 0.08), 0px 6px 12px -6px rgba(24, 39, 75, 0.12);\n}\n</style>","export default \"__VITE_ASSET__5ff7cc9b__\"","<script setup>\nconst route = useRoute();\nconst filters = useFilters();\n\nconst uncheckFilter = (index) => {\n    if (index == 0) {\n        const { specialty_id, ...rest } = route.query;\n        filters.value[index].value = null;\n        navigateTo({ query: rest });\n    } else if (index == 1) {\n        const { date, ...rest } = route.query;\n        filters.value[index].value = null;\n        navigateTo({ query: rest });\n    } else if (index == 2) {\n        const { metro_id, ...rest } = route.query;\n        filters.value[index].value = null;\n        navigateTo({ query: rest });\n    }\n}\n</script>\n\n<template>\n    <div class=\"flex-y-center gap-x-4 gap-y-2 flex-wrap\">\n        <ClientOnly>\n            <div v-for=\"(item, index) in filters\" :key=\"index\">\n                <div class=\"bg-blue hover:bg-[#176BC2] active:bg-[rgb(23,107,194)] flex-y-center gap-1 rounded-lg px-3 py-2 text-sm text-white leading-normal cursor-pointer transition-200 whitespace-nowrap\"\n                    v-if=\"item.value\" @click=\"uncheckFilter(index)\">\n                    {{ item.value }}\n                    <img src=\"~/assets/icons/unselect.svg\" alt=\"uncheck\">\n                </div>\n                <div v-else @click=\"$emit('filterOpen')\"\n                    class=\"bg-bg hover:bg-[#DBE3F0] active:bg-[#DBE3F0] rounded-lg px-3 py-2 text-sm text-darkBlue leading-normal cursor-pointer transition-200\">\n                    {{ $t(item.default) }}\n                </div>\n            </div>\n        </ClientOnly>\n    </div>\n</template>\n","export default \"__VITE_ASSET__76b39006__\"","<script setup>\nimport Flicking from \"@egjs/vue3-flicking\";\nimport \"../../node_modules/@egjs/vue3-flicking/dist/flicking-inline.css\";\nconst { t } = useI18n();\n\nconst props = defineProps([\"doctor\"]);\nconst flicking = ref(null);\n\nconst today = new Date();\nfunction getDateInfo(offset) {\n  const targetDate = new Date();\n  targetDate.setDate(today.getDate() + offset);\n  var weekdayName = null;\n  var availHours = [];\n\n  switch (offset) {\n    case 0:\n      weekdayName = t(`days.today`);\n      break;\n    case 1:\n      weekdayName = t(`days.tomorrow`);\n      break;\n\n    default:\n      weekdayName = t(`weekdaysShort[${targetDate.getDay()}]`);\n      break;\n  }\n\n  props.doctor.schedule?.forEach((el) => {\n    const date = new Date(el.date);\n    if (date.getDate() !== targetDate.getDate()) return;\n    availHours = el.time;\n  });\n\n  return {\n    date: targetDate.toISOString().split(\"T\")[0],\n    weekday: weekdayName,\n    exactly_time: availHours,\n    day: targetDate.getDate(),\n  };\n}\nconst schedule = ref([getDateInfo(0), getDateInfo(1), getDateInfo(2)]);\n\nconst numberOfFreeDaysThree = ref(0);\nconst selectedDay = ref(null);\nconst isToggle = ref(false);\nschedule.value.map((item, index) => {\n  if (item.exactly_time?.length) {\n    numberOfFreeDaysThree.value++;\n    if (selectedDay.value == null) selectedDay.value = index;\n  }\n});\nconst numberOfFreeDays = ref(0);\nconst firstFreeDay = ref(null);\nprops.doctor.schedule?.map((item) => {\n  if (item.time?.length) {\n    numberOfFreeDays.value++;\n    if (firstFreeDay.value == null) {\n      const date = new Date(item.date);\n      firstFreeDay.value = t(`months.${date.getMonth()}`, {\n        day: date.getDate(),\n      });\n    }\n  }\n});\n\nwatch(selectedDay, () => {\n  handleSelected();\n  updateSlicedTimes();\n});\nonMounted(() => {\n  handleSelected();\n  window.addEventListener(\"resize\", () => handleSelected());\n});\n\nfunction handleSelected() {\n  if (flicking.value) {\n    flicking.value.moveTo(0, 1000);\n  }\n  isToggle.value = false;\n\n  var widthOfNav = 0;\n  var leftOfNav = 0;\n  setTimeout(() => {\n    const parent = document.getElementById(`doctor${props.doctor.id}`);\n    if (!parent) return;\n\n    const el = parent.querySelector(\"#block\");\n    const activeEl = parent.getElementsByClassName(\"group/day selected\")[0];\n    if (!activeEl || !el) return;\n\n    widthOfNav = activeEl.offsetWidth;\n    leftOfNav = activeEl.offsetLeft;\n    el.style.width = `${widthOfNav}px`;\n    el.style.left = `${leftOfNav}px`;\n  }, 1);\n}\n\nconst tooltip = ref(false);\nlet timer;\nfunction showTooltip(idx) {\n  clearTimeout(timer);\n  tooltip.value = true;\n  const parent = document.getElementById(`doctor${props.doctor.id}`);\n  const el = parent.querySelector(\"#tooltip\");\n  if (idx == 0) {\n    el.style.left = \"0px\";\n    (\"unset\");\n  } else if (idx == 1) {\n    el.style.transform = \"translateX(0)\";\n    el.style.right = el.style.left = \"50%\";\n    el.style.transform = \"translateX(-50%)\";\n    el.style.right = \"unset\";\n  } else if (idx == 2) {\n    el.style.right = \"0px\";\n    el.style.transform = \"translateX(0)\";\n    el.style.left = \"unset\";\n  }\n  timer = setTimeout(() => {\n    tooltip.value = false;\n  }, 3000);\n}\nfunction hideTooltip() {\n  setTimeout(() => {\n    tooltip.value = false;\n  }, 1);\n}\n// TODO mapto\n\nconst options = { align: \"prev\", bound: true, moveType: \"freeScroll\" };\n\nconst selectedDayQuery = useState(\"useSelectedDayQuery\", () => null);\nconst selectedHourQuery = useState(\"useSelectedHourQuery\", () => null);\n\nconst selectAppointment = (hour) => {\n  selectedDayQuery.value = schedule.value[selectedDay.value].date;\n  selectedHourQuery.value = hour;\n};\n\nconst slicedTimes = ref(\n  schedule.value[selectedDay.value]?.exactly_time?.length > 10\n    ? schedule.value[selectedDay.value].exactly_time.slice(0, 9)\n    : schedule.value[selectedDay.value]?.exactly_time\n);\nconst count = ref(slicedTimes.value?.length);\n\nconst dayChanging = ref(false);\nfunction updateSlicedTimes() {\n  dayChanging.value = true;\n  slicedTimes.value =\n    schedule.value[selectedDay.value]?.exactly_time?.length > 10\n      ? schedule.value[selectedDay.value].exactly_time.slice(0, 9)\n      : schedule.value[selectedDay.value]?.exactly_time;\n  count.value = slicedTimes.value?.length;\n}\n\nconst popWithDelay = () => {\n  if (count.value > 9) {\n    count.value--;\n    slicedTimes.value.pop();\n    setTimeout(popWithDelay, 10);\n  }\n};\n\nconst pushWithDelay = () => {\n  if (count.value < schedule.value[selectedDay.value].exactly_time.length) {\n    count.value++;\n    slicedTimes.value.push(\n      schedule.value[selectedDay.value].exactly_time[count.value - 1]\n    );\n    setTimeout(pushWithDelay, 10);\n  }\n};\nwatch(isToggle, (newVal) => {\n  if (newVal) pushWithDelay();\n  else if (!newVal && !dayChanging.value) popWithDelay();\n  dayChanging.value = false;\n});\n</script>\n\n<template>\n  <div\n    class=\"bg-white rounded-2xl p-2 flex flex-col max-[512px]:max-w-[calc(100vw-32px)] md:w-[804px] w-full transition-shadow duration-300 card-shadow min-w-[330px] relative\"\n    :id=\"`doctor${doctor.id}`\"\n  >\n    <NuxtLinkLocale\n      :to=\"`/doctor/${doctor.id}`\"\n      class=\"absolute top-0 left-0 w-full h-full\"\n    ></NuxtLinkLocale>\n    <div class=\"flex flex-col md:flex-row\">\n      <!-- avatar and name -->\n      <div class=\"flex flex-col md:w-1/2\">\n        <div class=\"flex gap-4 p-2 pb-0\">\n          <div\n            class=\"border border-dividers rounded-[9px] relative shrink-0 h-fit pointer-events-none\"\n          >\n            <img\n              class=\"rounded-lg max-md:w-[100px] max-md:h-[125px]\"\n              width=\"110\"\n              height=\"138\"\n              :src=\"doctor.avatar_300_375\"\n              alt=\"avatar\"\n            />\n            <div\n              class=\"bg-red rounded-b-lg text-xs md:text-[15px] text-white text-center absolute bottom-0 left-0 w-full h-[18px] md:h-[26px] flex-center\"\n              v-if=\"doctor.experience\"\n            >\n              {{ $t(\"experience\", { year: doctor.experience }) }}\n            </div>\n          </div>\n          <div class=\"flex flex-col gap-3\">\n            <div class=\"flex flex-col gap-2\">\n              <p\n                class=\"text-base md:text-[18px] text-darkBlue font-bold leading-normal\"\n              >\n                {{ doctor.full_name }}\n              </p>\n              <div class=\"flex flex-col gap-0.5\">\n                <div\n                  class=\"flex gap-1 items-center flex-wrap\"\n                  v-if=\"doctor.specialties\"\n                >\n                  <span\n                    v-for=\"(item, index) in doctor.specialties.slice(0, 3)\"\n                    class=\"text-xs md:text-[14px] font-bold leading-normal text-blue flex gap-1 items-center\"\n                  >\n                    <svg\n                      v-if=\"index != 0\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"2\"\n                      height=\"2\"\n                      viewBox=\"0 0 2 2\"\n                      fill=\"none\"\n                    >\n                      <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"#1D7ED8\" />\n                    </svg>\n                    {{ item.name }}\n                  </span>\n                </div>\n                <div\n                  class=\"text-xs md:text-[14px] leading-normal text-secondary\"\n                  v-if=\"doctor.degree.name\"\n                >\n                  {{ doctor.degree.name }}\n                </div>\n              </div>\n            </div>\n            <div class=\"flex gap-2 items-center flex-wrap\">\n              <div class=\"flex items-center gap-1\">\n                <IconRating :rating=\"doctor.average_rating\" />\n                <div\n                  class=\"px-1 py-0.5 rounded bg-[#FEF9EB] text-xs md:text-[14px] leading-normal font-bold text-yellow\"\n                >\n                  {{ doctor.average_rating.toFixed(1) }}\n                </div>\n              </div>\n              <div class=\"text-xs md:text-[14px] leading-normal text-red\">\n                {{ $t(\"ratingsCount\", { count: doctor.count_of_ratings }) }}\n              </div>\n            </div>\n            <!-- price -->\n            <div class=\"max-md:hidden\">\n              <div class=\"flex flex-col gap-1 p-3 bg-bg rounded-lg\">\n                <p class=\"text-xs text-secondary leading-normal\">\n                  {{ $t(\"price\") }}\n                </p>\n                <div class=\"flex-y-center gap-1\">\n                  <div class=\"text-sm font-bold text-darkBlue leading-normal\">\n                    {{\n                      numberWithSpaces(\n                        doctor.discount_price ?? doctor.original_price\n                      )\n                    }}\n                    сум\n                  </div>\n                  <div\n                    class=\"flex gap-1 items-center\"\n                    v-if=\"doctor.discount_price\"\n                  >\n                    <div class=\"text-xs text-red line-through\">\n                      {{ numberWithSpaces(doctor.original_price) }}\n                      сум\n                    </div>\n                    <div\n                      class=\"bg-blue bg-opacity-10 rounded px-1 py-0.5 text-xs font-bold text-blue leading-normal\"\n                    >\n                      -{{\n                        Math.floor(\n                          100 -\n                            (doctor.discount_price * 100) /\n                              doctor.original_price\n                        )\n                      }}%\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- price -->\n        <div class=\"px-2 pt-4 md:hidden\">\n          <div class=\"flex flex-col gap-1 p-3 bg-bg rounded-lg\">\n            <p class=\"text-xs text-secondary leading-normal\">\n              {{ $t(\"price\") }}:\n            </p>\n            <div class=\"flex-y-center gap-1\">\n              <div class=\"text-sm font-bold text-darkBlue leading-normal\">\n                {{\n                  numberWithSpaces(\n                    doctor.discount_price ?? doctor.original_price\n                  )\n                }}\n                сум\n              </div>\n              <div class=\"flex gap-1 items-center\" v-if=\"doctor.discount_price\">\n                <div class=\"text-xs text-red line-through\">\n                  {{ numberWithSpaces(doctor.original_price) }}\n                  сум\n                </div>\n                <div\n                  class=\"bg-blue bg-opacity-10 rounded px-1 py-0.5 text-xs font-bold text-blue leading-normal\"\n                >\n                  -{{\n                    Math.floor(\n                      100 -\n                        (doctor.discount_price * 100) / doctor.original_price\n                    )\n                  }}%\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- 3-day schedule -->\n      <div class=\"flex flex-col md:w-1/2\">\n        <div class=\"flex flex-col\">\n          <div\n            class=\"px-2 py-4 flex flex-col gap-3 border-b border-dividers\"\n            v-if=\"numberOfFreeDaysThree\"\n          >\n            <div class=\"flex gap-1 items-center\">\n              <img src=\"~/assets/icons/clock.svg\" alt=\"clock\" />\n              <p class=\"text-xs md:text-[14px] leading-normal text-secondary\">\n                {{ $t(\"selectDate\") }}\n              </p>\n            </div>\n            <div class=\"p-0.5 flex bg-bg rounded-lg relative\">\n              <div\n                id=\"block\"\n                class=\"bg-white shadow-[0px_3px_1px_0px_rgba(0,0,0,0.04),0px_3px_8px_0px_rgba(0,0,0,0.12)] h-7 absolute top-0.5 rounded-lg transition-300\"\n              ></div>\n              <div\n                class=\"group/day px-2 py-1.5 h-7 relative w-1/3 flex justify-center items-center cursor-pointer\"\n                v-for=\"(item, index) in schedule\"\n                :class=\"{\n                  selected: selectedDay == index,\n                  disabled: !schedule[index].exactly_time.length,\n                }\"\n                @click=\"\n                  schedule[index].exactly_time.length\n                    ? (selectedDay = index)\n                    : showTooltip(index)\n                \"\n              >\n                <div\n                  v-if=\"selectedDay == 0 && index == 1\"\n                  class=\"w-[0.65px] h-5 rounded-[0.5px] bg-dividers absolute right-[1.3px] top-1\"\n                ></div>\n                <span\n                  class=\"text-xs text-darkBlue leading-5 group-[.selected]/day:font-bold group-[.disabled]/day:text-secondary transition-300\"\n                >\n                  {{ item.weekday }}, {{ item.day }}\n                </span>\n                <div\n                  v-if=\"selectedDay == 2 && index == 0\"\n                  class=\"w-[0.65px] h-5 rounded-[0.5px] bg-dividers absolute right-[1.3px] top-1\"\n                ></div>\n              </div>\n              <!-- tooltip -->\n              <div\n                id=\"tooltip\"\n                class=\"absolute bottom-[calc(100%+6px)] transition-300 w-fit\"\n                :style=\"`opacity: ${tooltip ? 1 : 0}`\"\n                v-click-outside=\"hideTooltip\"\n              >\n                <div\n                  class=\"relative p-3 rounded-[10px] bg-darkBlue bg-opacity-80 text-xs text-white shadow-[0px_18px_88px_-4px_rgba(24,39,75,0.14),_0px_8px_28px_-6px_rgba(24,39,75,0.12)]\"\n                >\n                  {{ $t(\"allbusy\") }}\n                </div>\n                <img\n                  class=\"absolute top-full left-1/2 -translate-x-1/2\"\n                  width=\"13.6\"\n                  height=\"6\"\n                  src=\"~/assets/icons/tooltip-arrow.svg\"\n                  alt=\"arrow\"\n                />\n              </div>\n            </div>\n            <Flicking\n              class=\"-mx-4 px-4 md:hidden hours !w-auto\"\n              :options=\"options\"\n              ref=\"flicking\"\n            >\n              <NuxtLinkLocale\n                :to=\"`/doctor/${doctor.id}`\"\n                draggable=\"false\"\n                class=\"mr-2 rounded-lg bg-blue hover:bg-[#176BC2] active:bg-[#176BC2]\"\n                v-for=\"(item, index) in schedule[selectedDay].exactly_time\"\n                :key=\"item.id\"\n                @click=\"selectAppointment(index)\"\n              >\n                <div class=\"flex-center h-8 w-[60px] text-sm text-white\">\n                  {{ item.exactly_time?.split(\":\").slice(0, 2).join(\":\") }}\n                </div>\n              </NuxtLinkLocale>\n            </Flicking>\n            <div\n              class=\"flex flex-wrap gap-2 max-md:hidden transition-300 select-none overflow-y-hidden\"\n            >\n              <NuxtLinkLocale\n                class=\"hour rounded-lg bg-blue flex-center w-[60px] h-[32px] text-sm text-white transition-300 z-0\"\n                :to=\"`/doctor/${doctor.id}`\"\n                v-for=\"(item, index) in slicedTimes\"\n                :key=\"item.id\"\n                @click=\"selectAppointment(index)\"\n              >\n                {{ item.exactly_time?.split(\":\").slice(0, 2).join(\":\") }}\n              </NuxtLinkLocale>\n              <div\n                @click=\"isToggle = !isToggle\"\n                v-if=\"schedule[selectedDay].exactly_time.length > 10\"\n                class=\"hour group rounded-lg border border-blue bg-white text-darkBlue hover:text-white text-sm flex-center w-[60px] h-[32px] transition-300 cursor-pointer z-0\"\n              >\n                <div\n                  class=\"w-4 h-4 flex-center transition-300\"\n                  :class=\"{ '-rotate-180': isToggle }\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"8\"\n                    height=\"4\"\n                    viewBox=\"0 0 8 4\"\n                    fill=\"none\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M0.276332 0.354297C0.448837 0.138666 0.763483 0.103705 0.979114 0.27621L4.0001 2.693L7.02109 0.27621C7.23672 0.103705 7.55136 0.138666 7.72387 0.354297C7.89637 0.569928 7.86141 0.884574 7.64578 1.05708L4.31245 3.72375C4.12984 3.86983 3.87036 3.86983 3.68775 3.72375L0.354419 1.05708C0.138788 0.884574 0.103827 0.569928 0.276332 0.354297Z\"\n                      fill=\"#002168\"\n                      class=\"group-hover:fill-white transition-300\"\n                    />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"px-2 py-4 flex flex-col gap-2 border-b border-dividers\"\n            v-else\n          >\n            <div class=\"flex gap-1 items-center\">\n              <img src=\"~/assets/icons/clock.svg\" alt=\"clock\" />\n              <div class=\"text-xs text-secondary\">\n                {{\n                  firstFreeDay ? $t(\"firstFree[0]\") : $t(\"submitApplication[0]\")\n                }}\n              </div>\n            </div>\n            <NuxtLinkLocale\n              :to=\"`/doctor/${doctor.id}`\"\n              class=\"bg-blue hover:bg-[#176BC2] active:bg-[#176BC2] cursor-pointer rounded-lg px-3 py-2 text-sm text-white w-fit z-0\"\n            >\n              {{\n                firstFreeDay\n                  ? $t(\"firstFree[1]\", { date: firstFreeDay })\n                  : $t(\"submitApplication[1]\")\n              }}\n            </NuxtLinkLocale>\n          </div>\n        </div>\n        <a\n          :href=\"`geo:${doctor.clinic.latitude},${doctor.clinic.longitude}`\"\n          class=\"flex-y-center justify-between py-4 px-2 hover:bg-[#E5E9F0] active:bg-[#CCD3E1] rounded-xl max-md:hidden z-0\"\n        >\n          <div class=\"flex gap-1 items-center w-3/5\">\n            <IconLocation />\n            <div class=\"flex flex-col gap-1\">\n              <div class=\"text-xs text-secondary line-clamp-1\">\n                {{ doctor.clinic.address }}\n              </div>\n              <div class=\"text-sm text-darkBlue font-bold\">\n                {{ doctor.clinic.name }}\n              </div>\n            </div>\n          </div>\n          <div class=\"flex gap-1 items-center\">\n            <div class=\"w-[18px] h-[18px] flex items-center justify-center\">\n              <img src=\"~/assets/icons/metro.svg\" alt=\"metro\" />\n            </div>\n            <div class=\"flex flex-col gap-0.5\">\n              <div class=\"text-xs text-secondary\">\n                {{ usePrettyDistance(doctor.clinic.distance) }}\n              </div>\n              <div class=\"text-sm text-darkBlue font-bold leading-4\">\n                {{ doctor.clinic.metro.name }}\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n      <!-- location -->\n      <a\n        :href=\"`geo:${doctor.clinic.latitude},${doctor.clinic.longitude}`\"\n        class=\"flex gap-8 items-center py-4 px-2 hover:bg-[#E5E9F0] active:bg-[#CCD3E1] rounded-xl md:hidden z-0\"\n      >\n        <div class=\"flex gap-1 items-center w-3/5\">\n          <IconLocation />\n          <div class=\"flex flex-col gap-1\">\n            <div class=\"text-xs text-secondary line-clamp-1\">\n              {{ doctor.clinic.address }}\n            </div>\n            <div class=\"text-sm text-darkBlue font-bold\">\n              {{ doctor.clinic.name }}\n            </div>\n          </div>\n        </div>\n        <div class=\"flex gap-1 items-center\">\n          <div class=\"w-[18px] h-[18px] flex items-center justify-center\">\n            <img src=\"~/assets/icons/metro.svg\" alt=\"metro\" />\n          </div>\n          <div class=\"flex flex-col gap-0.5\">\n            <div class=\"text-xs text-secondary\">\n              {{ usePrettyDistance(doctor.clinic.distance) }}\n            </div>\n            <div class=\"text-sm text-darkBlue font-bold leading-4\">\n              {{ doctor.clinic.metro.name }}\n            </div>\n          </div>\n        </div>\n      </a>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.card-shadow:hover {\n  box-shadow: 0px 12px 42px -4px rgba(24, 39, 75, 0.12),\n    0px 8px 18px -6px rgba(24, 39, 75, 0.12);\n}\n\n.card-shadow:active {\n  box-shadow: 0px 8px 8px -4px rgba(24, 39, 75, 0.08),\n    0px 4px 6px -4px rgba(24, 39, 75, 0.12);\n}\n\n.hour:hover {\n  background: linear-gradient(\n      0deg,\n      rgba(0, 33, 104, 0.2) 0%,\n      rgba(0, 33, 104, 0.2) 100%\n    ),\n    #1d7ed8;\n}\n\n.hour:active {\n  background: linear-gradient(\n      0deg,\n      rgba(0, 33, 104, 0.2) 0%,\n      rgba(0, 33, 104, 0.2) 100%\n    ),\n    #1d7ed8;\n}\n\n@keyframes toggle {\n  50% {\n    max-height: 0;\n  }\n\n  100% {\n    max-height: 500px;\n  }\n}\n\n.toggle-day {\n  animation: toggle 500ms ease-in-out forwards;\n}\n\n@media (hover: none) {\n  .card-shadow:active,\n  .card-shadow:hover {\n    box-shadow: none;\n  }\n}\n</style>\n\n<style>\n.hours .flicking-camera {\n  position: absolute;\n}\n\n.hours.flicking-viewport {\n  height: 32px;\n}\n</style>\n","<script setup>\nconst route = useRoute();\nconst { page } = route.query;\nconst props = defineProps({\n  pagination: {\n    required: true,\n    type: Object,\n  },\n});\nconst current_page = ref(page ?? 1);\nwatch(\n  () => route.query,\n  (val) => (current_page.value = +(val.page ?? 1))\n);\n\nconst nextPageQuery = computed(() => {\n  if (props.pagination.next) return { query: { page: current_page.value + 1 } };\n  else return null;\n});\n\nconst prevPageQuery = computed(() => {\n  if (props.pagination.previous) {\n    if (current_page == 2) return { query: {} };\n    else return { query: { page: current_page.value - 1 } };\n  } else return null;\n});\n\nconst pageNumberQuery = (index) => {\n  if (index === current_page) return null;\n  else {\n    if (index == 1) return { query: {} };\n    else return { query: { page: index } };\n  }\n};\n\nconst getAvailablePages = computed(() =>\n  Math.ceil(props.pagination.count / 15)\n);\n</script>\n\n<template>\n  <div class=\"flex-center gap-4\">\n    <NuxtLink\n      :to=\"prevPageQuery\"\n      class=\"group w-6 h-6 flex-center rounded-lg transition-100\"\n      :class=\"\n        !pagination.previous\n          ? 'is-disabled'\n          : 'hover:bg-darkBlue active:bg-darkBlue !bg-opacity-10'\n      \"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"7\"\n        height=\"12\"\n        viewBox=\"0 0 7 12\"\n        fill=\"none\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M5.8593 0.414376C6.18275 0.673133 6.23519 1.1451 5.97643 1.46855L2.35125 6.00003L5.97643 10.5315C6.23519 10.855 6.18275 11.3269 5.8593 11.5857C5.53586 11.8444 5.06389 11.792 4.80513 11.4685L0.805129 6.46855C0.585998 6.19464 0.585998 5.80542 0.805129 5.53151L4.80513 0.531506C5.06389 0.20806 5.53586 0.155619 5.8593 0.414376Z\"\n          class=\"group-[.is-disabled]:!fill-secondary group-[.is-disabled]:!opacity-40 fill-darkBlue group-active:fill-blue transition-100\"\n        />\n      </svg>\n    </NuxtLink>\n    <div class=\"flex-center gap-2.5\">\n      <NuxtLink\n        :to=\"pageNumberQuery(item)\"\n        class=\"w-6 h-6 flex-center rounded-lg text-sm text-darkBlue leading-normal hover:bg-darkBlue hover:bg-opacity-10 select-none\"\n        v-for=\"item in getAvailablePages\"\n        :key=\"item\"\n        :class=\"{\n          '!bg-blue !text-white': item == current_page,\n        }\"\n      >\n        {{ item }}\n      </NuxtLink>\n    </div>\n    <NuxtLink\n      :to=\"nextPageQuery\"\n      class=\"group w-6 h-6 flex-center rounded-lg transition-100\"\n      :class=\"\n        !pagination.next\n          ? 'is-disabled'\n          : 'hover:bg-darkBlue active:bg-darkBlue !bg-opacity-10'\n      \"\n    >\n      <svg\n        class=\"rotate-180\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"7\"\n        height=\"12\"\n        viewBox=\"0 0 7 12\"\n        fill=\"none\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M5.8593 0.414376C6.18275 0.673133 6.23519 1.1451 5.97643 1.46855L2.35125 6.00003L5.97643 10.5315C6.23519 10.855 6.18275 11.3269 5.8593 11.5857C5.53586 11.8444 5.06389 11.792 4.80513 11.4685L0.805129 6.46855C0.585998 6.19464 0.585998 5.80542 0.805129 5.53151L4.80513 0.531506C5.06389 0.20806 5.53586 0.155619 5.8593 0.414376Z\"\n          class=\"group-[.is-disabled]:!fill-secondary group-[.is-disabled]:!opacity-40 fill-darkBlue group-active:fill-blue transition-100\"\n        />\n      </svg>\n    </NuxtLink>\n  </div>\n</template>\n","<script setup>\nconst props = defineProps({\n    selected: {\n        required: true,\n        type: Number,\n    },\n})\n\nconst genders = [\n    {\n        id: 2,\n        name: \"gender[0]\",\n    },\n    {\n        id: 1,\n        name: \"gender[1]\",\n    },\n];\n\nwatch(() => props.selected, () => handleSelected());\n\nfunction handleSelected() {\n    var widthOfNav = 0;\n    var leftOfNav = 0;\n    setTimeout(() => {\n        const el = document.querySelectorAll(\".gender-filter\");\n        const activeEl = document.querySelectorAll(\".selected-gender\");\n        if (!activeEl.length || !el.length) return;\n        el.forEach(item => {\n            activeEl.forEach(active => {\n                if (active.offsetWidth) {\n                    widthOfNav = active.offsetWidth\n                    leftOfNav = active.offsetLeft\n                    item.style.width = `${widthOfNav}px`\n                    item.style.left = `${leftOfNav}px`\n                }\n            })\n        })\n    }, 1);\n}\n\n\nonMounted(() => {\n    handleSelected();\n    window.addEventListener(\"resize\", () => handleSelected());\n})\n</script>\n\n<template>\n    <div class=\"flex flex-col gap-2\">\n        <div class=\"text-xs text-secondary\">{{ $t(\"genderTitle\") }}</div>\n        <div class=\"p-0.5 bg-bg rounded-lg\">\n            <div class=\"relative flex\">\n                <div class=\"gender-filter bg-white h-7 gender-shadow rounded-lg absolute top-0 transition-300\">\n                </div>\n                <div class=\"px-2 py-1.5 h-7 relative w-1/3 flex justify-center items-center cursor-pointer text-xs text-darkBlue leading-5 transition-300\"\n                    :class=\"{ 'font-bold selected-gender': selected == 0 }\" @click=\"$emit('onChange', 0)\">\n                    {{ $t('nomatter') }}\n                    <div v-if=\"selected == 1\"\n                        class=\"w-[0.65px] h-5 rounded-[0.5px] bg-dividers absolute right-[1.3px] top-1\"></div>\n                </div>\n                <div class=\"px-2 py-1.5 h-7 relative w-1/3 flex justify-center items-center cursor-pointer text-xs text-darkBlue leading-5 transition-300\"\n                    v-for=\"item in genders\" :key=\"item.key\" :class=\"{ 'font-bold selected-gender': selected == item.id }\"\n                    @click=\"$emit('onChange', item.id)\">\n                    <div v-if=\"selected == 0 && item.id == 2\"\n                        class=\"w-[0.65px] h-5 rounded-[0.5px] bg-dividers absolute right-[1.3px] top-1\"></div>\n                    {{ $t(item.name) }}\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n.gender-shadow {\n    box-shadow: 0px 3px 1px 0px rgba(0, 0, 0, 0.04), 0px 3px 8px 0px rgba(0, 0, 0, 0.12);\n}\n</style>","import { StorageSerializers, useSessionStorage } from \"@vueuse/core\";\n\nexport default async (url, opts) => {\n  const time1 = Date.now();\n  const config = useRuntimeConfig();\n  const today = new Date().getDate();\n\n  const cache = useSessionStorage(`${url}?date=${today}`, null, {\n    serializer: StorageSerializers.object,\n  });\n\n  if (!cache.value) {\n    const { data, error } = await useFetch(url, {\n      baseURL: config.public.baseURL,\n      ...opts,\n    });\n\n    if (error.value) {\n      throw createError({\n        ...error.value,\n        statusMessage: `Could not fetch from ${url}`,\n      });\n    }\n\n    cache.value = data.value;\n    // console.log(`Fetching data for ${url}`)\n  } else {\n    // console.log(`Getting data from cache for ${url}`);\n  }\n\n  const time2 = Date.now();\n  return cache;\n};\n","<script setup>\nimport { useScroll, useScrollLock } from '@vueuse/core'\nconst { locale } = useI18n();\n\nconst props = defineProps({\n    selected: {\n        required: true,\n        type: Number,\n    },\n    gender: {\n        required: true,\n        type: Number,\n    },\n})\nconst filters = useFilters();\nconst emits = defineEmits(['onGenderChange', 'onChange'])\nconst onChange = (val) => {\n    emits('onGenderChange', val)\n}\n\nconst dataSpecialties = await useFetchWithCache(`${locale.value}/specialties/`)\n// const { data: dataSpecialties } = await useMyFetch(`${locale.value}/specialties/`)\nconst specialties = ref(dataSpecialties.value?.specialties);\nconst selectedIndex = ref(props.selected ? '' : null);\n\nconst filtered = ref(specialties.value);\n\nconst isOpen = ref(false);\nconst search = ref(null);\n\nconst isNextLetter = (index) => {\n    if (index == 0) return true;\n    return specialties.value[index].name.charAt(0) !== specialties.value[index - 1].name.charAt(0);\n};\n\nwatch(search, val => {\n    filtered.value = [];\n    specialties.value.map(item => {\n        if (item.name.toLowerCase().includes(val.toLowerCase())) {\n            filtered.value.push(item);\n        }\n    })\n})\n\nwatch(() => props.selected, val => {\n    isOpen.value = false;\n    if (val == 0) {\n        selectedIndex.value = null\n        filters.value[0].value = null;\n        return;\n    };\n    var temp = getIndex(val);\n    if (temp) {\n        selectedIndex.value = temp;\n        filters.value[0].value = specialties.value[selectedIndex.value].name;\n    };\n})\n\nwatch(isOpen, val => {\n    setTimeout(() => {\n        document.querySelector(\"#specialties-search\").querySelector(\"input\").focus();\n    }, 1);\n\n    const el = document.querySelector(\".fixed-filter\")\n    if (!el) return;\n    const { y } = useScroll(el)\n    const isLocked = useScrollLock(el)\n\n    if (val) {\n        y.value = 0;\n        isLocked.value = true;\n    } else {\n        el.style.overflowY = 'auto';\n    };\n})\n\nfunction getIndex(id) {\n    let val;\n    specialties.value.map((item, index) => {\n        if (item.id == id) val = index;\n    })\n    return val;\n}\n</script>\n\n<template>\n    <div>\n        <div class=\"flex flex-col gap-4\">\n            <div class=\"flex flex-col gap-2\">\n                <div class=\"text-xs text-secondary\">{{ $t(\"specialtiesTitle\") }}</div>\n                <div class=\"flex flex-wrap gap-2\">\n                    <div class=\"px-3 py-2 border border-blue hover:bg-[#E5E9F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue transition-100\"\n                        :class=\"{ 'text-white bg-blue hover:bg-blue': selected == 0 }\" @click=\"$emit('onChange', 0)\">\n                        {{ $t(\"nomatter\") }}\n                    </div>\n                    <div class=\"px-3 py-2 border border-blue hover:bg-darkBlue hover:bg-opacity-10 active:bg-blue active:text-white cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue transition-100 flex-y-center gap-1\"\n                        :class=\"{ 'selected bg-blue text-white': selected == item.id }\" v-if=\"specialties\"\n                        v-for=\"item in specialties.slice(0, 8)\" :key=\"item.key\" @click=\"$emit('onChange', item.id)\">\n                        {{ item.name }}\n                        <img v-if=\"selected == item.id\" src=\"~/assets/icons/unselect.svg\" alt=\"uncheck\">\n                    </div>\n                    <div class=\"px-3 py-2 border border-blue cursor-pointer rounded-lg line-clamp-1 text-sm transition-100 text-white bg-blue hover:bg-blue flex-y-center gap-1\"\n                        @click=\"$emit('onChange', specialties[selectedIndex].id)\" v-if=\"selectedIndex >= 8\">\n                        {{ specialties[selectedIndex].name }}\n                        <img src=\"~/assets/icons/unselect.svg\" alt=\"uncheck\">\n                    </div>\n                    <div class=\"px-3 py-2 bg-bg hover:bg-[#DBE3F0] active:bg-[#DBE3F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue transition-100\"\n                        @click=\"isOpen = true\">Все специальности</div>\n                </div>\n            </div>\n            <hr class=\"border-t border-dividers\" />\n            <FilterGender :selected=\"gender\" @on-change=\"onChange\" />\n        </div>\n\n        <Transition name=\"fade\" mode=\"out-in\">\n            <PageModal :is-open=\"isOpen\" @close=\"isOpen = false\" v-if=\"isOpen\">\n                <template #body>\n                    <div\n                        class=\"fixed-center z-[100] max-w-[804px] w-full max-lg:h-full lg:max-h-[80%] bg-white p-4 rounded-2xl flex flex-col gap-4\">\n                        <p class=\"text-darkBlue text-2xl font-bold leading-normal text-center\">Все специальности</p>\n                        <div class=\"flex flex-col gap-4 overflow-hidden\">\n                            <BaseSearchInput v-model=\"search\" placeholder=\"Введите специальность\"\n                                id=\"specialties-search\" />\n                            <div class=\"flex flex-col gap-1 overflow-y-auto scrollbar-style\">\n                                <p class=\"text-xs text-secondary\">Специальность</p>\n                                <div class=\"flex flex-col\">\n                                    <div class=\"flex-y-center gap-4 hover:bg-darkBlue hover:bg-opacity-10 active:bg-darkBlue active:bg-opacity-20 cursor-pointer rounded-2xl px-4\"\n                                        v-for=\"item, index in filtered\" :key=\"item.key\"\n                                        @click=\"$emit('onChange', item.id)\" :class=\"{ 'bg-bg': item.id == selected }\">\n                                        <div class=\"flex-center w-6\">\n                                            <span v-if=\"isNextLetter(index)\"\n                                                class=\"rounded flex-center w-6 h-6 bg-bg text-base font-bold text-secondary leading-normal\">\n                                                {{ item.name[0] }}</span>\n                                        </div>\n                                        <div\n                                            class=\"py-4 flex-y-center justify-between border-b border-dividers w-full h-[50px]\">\n                                            <p class=\"text-sm text-darkBlue\">{{ item.name }}</p>\n                                            <img v-if=\"item.id == selected\" src=\"~/assets/icons/tick.svg\" alt=\"tick\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </template>\n            </PageModal>\n        </Transition>\n    </div>\n</template>\n\n<style scoped>\n.selected:hover,\n.selected:active {\n    background: linear-gradient(0deg, rgba(0, 33, 104, 0.20) 0%, rgba(0, 33, 104, 0.20) 100%), #1D7ED8;\n}\n</style>\n","<script setup>\nconst { t } = useI18n();\n\nconst emit = defineEmits(['onChange'])\nconst props = defineProps({\n    selected: { required: true },\n})\nconst filters = useFilters();\nconst filterDate = ref(props.selected)\nconst isModalDateOpen = ref(false);\n\nconst datePanels = ref([]);\nconst dates = initDates(21);\nconst filterDateIndex = ref(null);\ndates.map((date, index) => {\n    if (date.date == props.selected) filterDateIndex.value = index;\n})\n\nfunction initDates(days) {\n    let temp = [];\n    for (let i = 0; i < days; i++) {\n        temp.push(getDateInfo(i));\n    }\n    return temp;\n}\nfunction getDateInfo(offset) {\n    const today = new Date();\n    const targetDate = new Date();\n    targetDate.setDate(today.getDate() + offset);\n    var weekdayName = null;\n\n    switch (offset) {\n        case 0:\n            weekdayName = t(`days.today`)\n            break;\n        case 1:\n            weekdayName = t(`days.tomorrow`)\n            break;\n\n        default:\n            weekdayName = t(`weekdays[${targetDate.getDay()}]`);\n            break;\n    }\n    const date = targetDate.toISOString().split('T')[0];\n    const text = `${weekdayName}, ${targetDate.getDate()}`;\n    datePanels.value.push(text);\n    return { date, text };\n};\n\nconst tempDayIndex = ref(null);\nconst onDayChange = e => {\n    tempDayIndex.value = e.index;\n}\n\nconst onSubmit = () => {\n    isModalDateOpen.value = false;\n    filterDateIndex.value = tempDayIndex.value;\n    filters.value[1].value = dates[filterDateIndex.value].text;\n    emit('onChange', dates[tempDayIndex.value].date);\n}\n\nconst onDayClick = (val, index) => {\n    if (index && filterDateIndex.value !== index) {\n        filterDateIndex.value = index\n        filters.value[1].value = dates[filterDateIndex.value].text;\n        emit('onChange', val);\n    } else {\n        filterDateIndex.value = null;\n        filters.value[1].value = null;\n        emit('onChange', null);\n    }\n}\n\nwatch(filterDateIndex, val => console.log(val))\n</script>\n\n<template>\n    <div class=\"flex flex-col gap-2\">\n        <div class=\"text-xs text-secondary\">{{ $t(\"filter.date\") }}</div>\n        <div class=\"flex flex-wrap gap-2\">\n            <div class=\"px-3 py-2 border border-blue hover:bg-[#E5E9F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue\"\n                :class=\"{ 'text-white bg-blue hover:bg-blue': filterDateIndex == null }\"\n                @click=\"onDayClick(null, null)\">\n                {{ $t(\"nomatter\") }}\n            </div>\n            <div class=\"px-3 py-2 border border-blue hover:bg-[#E5E9F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue flex-y-center gap-1\"\n                :class=\"{ 'text-white bg-blue hover:bg-blue': filterDateIndex == index }\"\n                v-for=\"item, index in dates.slice(0, 4)\" :key=\"item.key\" @click=\"onDayClick(item.date, index)\">\n                {{ item.text }}\n                <img v-if=\"filterDateIndex == index\" src=\"~/assets/icons/unselect.svg\" alt=\"uncheck\">\n            </div>\n            <div class=\"px-3 py-2 border border-blue cursor-pointer rounded-lg line-clamp-1 text-sm flex-y-center gap-1 text-white bg-blue hover:bg-blue\"\n                @click=\"onDayClick(null, null)\" v-if=\"filterDateIndex >= 4\">\n                {{ dates[filterDateIndex].text }}\n                <img src=\"~/assets/icons/unselect.svg\" alt=\"uncheck\">\n            </div>\n            <div class=\"px-3 py-2 bg-bg hover:bg-[#DBE3F0] active:bg-[#DBE3F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue\"\n                @click=\"isModalDateOpen = true\">{{ $t(\"alldates\") }}</div>\n\n        </div>\n    </div>\n    <Teleport to=\"body\">\n        <Transition name=\"fade\" mode=\"out-in\">\n            <PageModal :is-open=\"isModalDateOpen\" @close=\"isModalDateOpen = false\" v-if=\"isModalDateOpen\">\n                <template #body>\n                    <div\n                        class=\"fixed-center z-[100] max-w-[668px] w-full max-lg:h-full lg:max-h-[80%] bg-white p-4 rounded-2xl flex flex-col gap-4 overflow-hidden\">\n                        <div class=\"text-2xl text-darkBlue font-bold text-center\">{{ $t(\"filter.date\") }}</div>\n                        <BaseDatePicker class=\"w-full\" uniqueID=\"flicking-date\" :panels=\"datePanels\"\n                            @on-change=\"onDayChange\" :selected=\"filterDateIndex\" />\n                        <BaseButton state=\"primary\" @click=\"onSubmit\">{{ $t(\"select\") }}</BaseButton>\n                    </div>\n                </template>\n            </PageModal>\n        </Transition>\n    </Teleport>\n</template>\n","<script setup>\nconst { locale } = useI18n();\n\nconst props = defineProps({\n    selected: {\n        required: true,\n        type: Number,\n    },\n})\nconst filters = useFilters();\n\nconst dataMetros = await useFetchWithCache(`${locale.value}/metropolitans/`)\n// const { data: dataMetros } = await useMyFetch(`${locale.value}/metropolitans/`)\nconst metros = ref(dataMetros.value)\n\nconst filtered = ref(metros.value);\nconst isOpen = ref(false);\nconst search = ref(null);\nconst selectedIndex = ref(null);\n\nconst getSelectedIndex = () => {\n    metros.value.map((item, index) => {\n        if (item.id == props.selected) selectedIndex.value = index;\n    })\n    if (selectedIndex.value) filters.value[2].value = metros.value[selectedIndex.value].name;\n}\ngetSelectedIndex();\n\nwatch(() => props.selected, val => {\n    isOpen.value = false;\n    if (val == 0) {\n        selectedIndex.value = null\n        filters.value[2].value = null;\n        return;\n    };\n    getSelectedIndex();\n})\n\nwatch(search, val => {\n    filtered.value = [];\n    metros.value.map(item => {\n        if (item.name.toLowerCase().includes(val.toLowerCase())) {\n            filtered.value.push(item);\n        }\n    })\n})\n\nwatch(isOpen, () => {\n    setTimeout(() => {\n        document.querySelector(\"#metro-search\").querySelector('input').focus();\n    }, 1);\n})\n</script>\n\n<template>\n    <div>\n        <div class=\"flex flex-col gap-2\">\n            <div class=\"text-xs text-secondary\">{{ $t(\"metroTitle\") }}</div>\n            <div class=\"flex flex-wrap gap-2\">\n                <div class=\"px-3 py-2 border border-blue hover:bg-[#E5E9F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue transition-100\"\n                    :class=\"{ 'text-white bg-blue hover:bg-blue': selected == 0 }\" @click=\"$emit('onChange', 0)\">\n                    {{ $t(\"nomatter\") }}</div>\n                <div class=\"px-3 py-2 border border-blue hover:bg-[#E5E9F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue transition-100 flex-y-center gap-1\"\n                    :class=\"{ 'text-white bg-blue hover:bg-blue': selected == item.id }\" v-for=\"item in metros.slice(0, 4)\"\n                    :key=\"item.key\" @click=\"$emit('onChange', item.id)\">\n                    {{ item.name }}\n                    <img v-if=\"selected == item.id\" src=\"~/assets/icons/unselect.svg\" alt=\"uncheck\">\n                </div>\n                <div class=\"px-3 py-2 border border-blue cursor-pointer rounded-lg line-clamp-1 text-sm transition-100 text-white bg-blue hover:bg-blue flex-y-center gap-1\"\n                    @click=\"$emit('onChange', metros[selectedIndex].id)\" v-if=\"selectedIndex >= 4\">\n                    {{ metros[selectedIndex].name }}\n                    <img src=\"~/assets/icons/unselect.svg\" alt=\"uncheck\">\n                </div>\n                <div class=\"px-3 py-2 bg-bg hover:bg-[#DBE3F0] active:bg-[#DBE3F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue\"\n                    @click=\"isOpen = true\">{{ $t(\"allMetro\") }}</div>\n            </div>\n        </div>\n\n        <Transition name=\"fade\" mode=\"out-in\">\n            <PageModal :is-open=\"isOpen\" @close=\"isOpen = false\" v-if=\"isOpen\">\n                <template #body>\n                    <div\n                        class=\"fixed-center z-[100] max-w-[804px] w-full max-lg:h-full lg:max-h-[80%] bg-white p-4 rounded-2xl flex flex-col gap-4\">\n                        <p class=\"text-darkBlue text-2xl font-bold leading-normal text-center\">\n                            {{ $t(\"metroTitle\") }}\n                        </p>\n                        <BaseSearchInput v-model=\"search\" placeholder=\"Введите название станции\" id=\"metro-search\" />\n                        <div class=\"overflow-y-auto scrollbar-style\">\n                            <div class=\"flex flex-col\">\n                                <div class=\"hover:bg-[#E5E9F0] text-sm text-darkBlue flex justify-between items-center h-[50px] cursor-pointer px-4 rounded-lg\"\n                                    :class=\"{ 'group bg-bg hover:bg-bg selected': selected == item.id }\"\n                                    v-for=\"item in filtered\" :key=\"item.key\" @click=\"$emit('onChange', item.id)\">\n                                    {{ item.name }}\n                                    <img class=\"hidden group-[.selected]:block\" src=\"~/assets/icons/tick.svg\" alt=\"tick\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </template>\n            </PageModal>\n        </Transition>\n    </div>\n</template>\n","<script setup>\nconst { locale } = useI18n();\nconst props = defineProps({\n    loading: Boolean,\n    count: Number,\n})\n\nconst route = useRoute();\n// filter data\nconst specialties = ref(route.query.specialty_id ?? 0);\nconst onSpecChange = (id) => {\n    if (specialties.value == id) {\n        specialties.value = 0;\n    } else {\n        specialties.value = id;\n    }\n};\nconst gender = ref(route.query.gender ?? 0);\nconst onGenderChange = (val) => {\n    gender.value = val;\n};\nconst date = ref(route.query.date ?? null);\nconst onDateChange = (val) => {\n    date.value = val;\n}\nconst metro = ref(route.query.metro_id ?? 0);\nconst onMetroChange = (val) => {\n    if (metro.value == val) metro.value = 0;\n    else metro.value = val;\n}\n\n\nconst filterQueries = reactive({\n    specialty_id: specialties,\n    gender: gender,\n    date: date,\n    metro_id: metro,\n})\nwatch(filterQueries, async (newVal) => {\n    let temp = \"\";\n    let queries = {};\n    for (const property in newVal) {\n        if (newVal.hasOwnProperty(property)) {\n            if (\n                !(property == 'specialty_id' && newVal[property] == 0) &&\n                !(property == 'gender' && newVal[property] == 0) &&\n                !(property == 'date' && newVal[property] == null) &&\n                !(property == 'metro_id' && newVal[property] == 0) &&\n                !(property == 'order_by' && newVal[property] !== undefined)\n            ) {\n                temp += `${temp.length ? '&' : ''}${property}=${newVal[property]}`;\n                queries[property] = newVal[property];\n            }\n        }\n    }\n    if (route.query.order_by) queries.order_by = route.query.order_by;\n    navigateTo({ query: queries });\n})\n</script>\n\n<template>\n    <div class=\"bg-white rounded-2xl p-4 flex flex-col gap-4\">\n        <div class=\"flex flex-col gap-4\">\n            <div class=\"flex justify-between items-center\">\n                <div class=\"text-2xl font-bold text-darkBlue\">{{ $t(\"filterTitle\") }}</div>\n                <NuxtLink :to=\"{ query: {} }\" class=\"text-sm text-blue hover:text-red active:text-[#BA2A6F] cursor-pointer\">\n                    {{ $t(\"reset\") }}</NuxtLink>\n            </div>\n            <div class=\"flex flex-col gap-4\">\n                <FilterSpecialties :selected=\"+specialties\" @on-change=\"onSpecChange\" :gender=\"+gender\"\n                    @on-gender-change=\"onGenderChange\" />\n                <hr class=\"border-t border-dividers\" />\n                <FilterDate :selected=\"date\" @on-change=\"onDateChange\" />\n                <hr class=\"border-t border-dividers\" />\n                <FilterMetro :selected=\"+metro\" @on-change=\"onMetroChange\" />\n            </div>\n            <BaseButton state=\"primary\" class=\"sticky bottom-4 lg:hidden\" @click=\"$emit('close')\">{{ $t(\"select\") }}</BaseButton>\n        </div>\n    </div>\n</template>\n\n\n<style scoped>\n.date-panel-border {\n    border-bottom: 4px solid #ddd;\n    border-top: 4px solid #ddd;\n    height: 60px;\n    left: 20px;\n    position: absolute;\n    top: 90px;\n    width: calc(100% - 40px);\n}\n</style>\n","export default \"__VITE_ASSET__da7a1226__\"","<script setup>\nconst { locale } = useI18n();\nconst route = useRoute();\nconst tempQuery = ref(route.query);\n\nconst { data: dataDoctors } = await useMyFetch(`${locale.value}/doctors/`, { query: tempQuery.value, format: 'json' });\nconst doctors = ref(dataDoctors.value.results);\nconst count = useCount();\ncount.value = dataDoctors.value.count;\nconst pagination = ref(dataDoctors.value);\n\nconst sort = useSort();\nconst sortActive = ref(0);\nwatch(sortActive, newVal => {\n    let temp = {};\n    temp.order_by = sort.value[newVal].slug;\n    let queries = Object.assign({}, route.query, temp)\n    navigateTo({ query: queries });\n})\n\nconst isFilterOpen = ref(false);\nconst isLoading = ref(false);\n\nwatch(() => route.query, async val => {\n    let temp = val;\n    isLoading.value = true;\n    const { data } = await useMyFetch(`${locale.value}/doctors/`, { query: temp, format: 'json' });\n    pagination.value = data.value;\n    doctors.value = data.value.results\n    count.value = data.value.count\n    isLoading.value = false;\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n})\n\nconst clinics = sortByClinic();\n\nfunction sortByClinic() {\n    const temp = doctors.value.reduce((acc, doctor) => {\n        const clinicId = doctor.clinic.id;\n\n        // Create an array for the clinic if it doesn't exist\n        if (!acc[clinicId]) {\n            acc[clinicId] = [];\n        }\n\n        // Add the doctor to the clinic's array\n        acc[clinicId].push(doctor);\n\n        return acc;\n    }, {});\n\n    return Object.keys(temp).map((clinicId) => ({\n        clinicId: clinicId, // Convert clinicId to number if needed\n        latitude: temp[clinicId][0].clinic.latitude,\n        longitude: temp[clinicId][0].clinic.longitude,\n        doctors: temp[clinicId],\n    }));;\n}\n</script>\n\n<template>\n    <div class=\"flex flex-col\">\n        <div class=\"lg:hidden bg-white px-4 md:pb-4 w-full\">\n            <div class=\"flex justify-between items-center max-w-[1280px] w-full lg:px-8\">\n                <div class=\"flex-y-center gap-4\">\n                    <BaseDropdownSort />\n                    <BaseFilterCard class=\"max-md:hidden\" @filter-open=\"isFilterOpen = true\" />\n                </div>\n                <div @click=\"isFilterOpen = true\"\n                    class=\"px-4 py-3 flex-y-center gap-1 h-10 bg-white hover:bg-[#E5E9F0] active:bg-[#E5E9F0] cursor-pointer rounded-lg\">\n                    <div class=\"w-[18px] h-[18px] flex-center\">\n                        <img src=\"~/assets/icons/filter.svg\" alt=\"filter\">\n                    </div>\n                    <span class=\"text-sm text-darkBlue\">{{ $t(\"filterTitle\") }}</span>\n                </div>\n            </div>\n            <BaseFilterCard class=\"md:hidden mt-2 mb-4\" @filter-open=\"isFilterOpen = true\" />\n        </div>\n\n        <div class=\"container py-4 md:py-5 flex gap-5\">\n            <div class=\"flex flex-col items-center gap-4 w-full lg:w-[804px] shrink-0\">\n                <CardDoctor v-for=\"item in doctors\" :key=\"item.id\" :doctor=\"item\" />\n                <BasePagination :pagination=\"pagination\" />\n            </div>\n            <div class=\"flex flex-col gap-5 max-lg:hidden select-none\">\n                <!-- sort -->\n                <div class=\"bg-white rounded-2xl p-4 flex flex-col gap-4\">\n                    <div class=\"text-2xl font-bold text-darkBlue\">{{ $t(\"sortTitle\") }}</div>\n                    <div class=\"flex flex-wrap gap-2\">\n                        <div class=\"px-3 py-2 border border-blue hover:bg-[#E5E9F0] cursor-pointer rounded-lg line-clamp-1 text-sm text-darkBlue\"\n                            :class=\"{ 'text-white bg-blue hover:bg-blue': sortActive == index }\"\n                            v-for=\"item, index in sort\" :key=\"item.key\" @click=\"sortActive = index\">\n                            {{ $t(`sort[${index}]`) }}\n                        </div>\n                    </div>\n                </div>\n                <BaseFilter :grouped=\"clinics\" :loading=\"isLoading\" :count=\"count\" />\n            </div>\n\n            <Transition name=\"fade\" mode=\"out-in\">\n                <div v-if=\"isFilterOpen\" class=\"lg:hidden\">\n                    <div class=\"bg-darkBlue bg-opacity-70 inset-0 fixed z-[99]\" @click=\"isFilterOpen = false\"></div>\n                    <div\n                        class=\"fixed-filter fixed-center w-[calc(100%-32px)] max-w-[800px] z-[100] max-h-[80%] overflow-y-auto rounded-2xl\">\n                        <BaseFilter :grouped=\"clinics\" @close=\"isFilterOpen = false\" />\n                    </div>\n                </div>\n            </Transition>\n        </div>\n    </div>\n</template>\n"],"names":["_a","_b","_c","_d","_withAsyncContext"],"mappings":"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"}